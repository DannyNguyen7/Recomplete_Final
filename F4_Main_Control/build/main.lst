ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB154:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "timer_software.h"
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** #include "string.h"
  27:Core/Src/main.c **** #include "stdlib.h"
  28:Core/Src/main.c **** #include "math.h"
  29:Core/Src/main.c **** #include <stdbool.h>
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** UART_HandleTypeDef huart6;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_CAN1_Init(void);
  63:Core/Src/main.c **** static void MX_TIM1_Init(void);
  64:Core/Src/main.c **** static void MX_TIM2_Init(void);
  65:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** #define V_MIN 0.5     // V min của TPS
  68:Core/Src/main.c **** #define V_MAX 2.97     // V_max TPS
  69:Core/Src/main.c **** #define ADC_MAX 4095   
  70:Core/Src/main.c **** #define V_SUM 3.3f       // V_sum TPS
  71:Core/Src/main.c **** #define DT 0.001
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** float setpoint;      // Vị trí mong muốn (%)
  74:Core/Src/main.c **** float position;      // Vị trí thực tế (%)
  75:Core/Src/main.c **** float error;         // Lỗi (%)
  76:Core/Src/main.c **** float integral;      // Thành phần tích phân
  77:Core/Src/main.c **** float derivative;    // Thành phần đạo hàm
  78:Core/Src/main.c **** float previous_error;// Lỗi trước đó
  79:Core/Src/main.c **** float Kp;            // Hệ số tỉ lệ
  80:Core/Src/main.c **** float Ki;            // Hệ số tích phân
  81:Core/Src/main.c **** float Kd;          // Hệ số đạo hàm
  82:Core/Src/main.c **** float output;        // �?ầu ra PID (%)
  83:Core/Src/main.c **** volatile bool sensor_error = false; // C�? lỗi cảm biến 
  84:Core/Src/main.c **** uint16_t TPS1;
  85:Core/Src/main.c **** uint16_t TPS2;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 3


  89:Core/Src/main.c **** //----------------------------------------------------Control--------------------------------------
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** float adc_to_voltage(uint32_t adc_value) {
  93:Core/Src/main.c ****     return (float)adc_value * 3.3 / ADC_MAX; // Chuyển đổi giá trị ADC sang điện áp
  94:Core/Src/main.c **** }
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** float calculate_position(uint16_t adc_value) {
  97:Core/Src/main.c ****     float voltage = adc_to_voltage(adc_value);
  98:Core/Src/main.c ****     float position = (voltage - V_MIN) / (V_MAX - V_MIN) * 100;
  99:Core/Src/main.c ****     if (position < 0) position = 0;
 100:Core/Src/main.c ****     if (position > 100) position = 100;
 101:Core/Src/main.c ****     return position;
 102:Core/Src/main.c **** }
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** void PID_control() {
 105:Core/Src/main.c ****     error = setpoint - position;
 106:Core/Src/main.c ****     integral += error * DT; 
 107:Core/Src/main.c ****     if (integral > 1000.0f) integral = 1000.0f; 
 108:Core/Src/main.c ****     if (integral < -1000.0f) integral = -1000.0f;
 109:Core/Src/main.c ****     derivative = (error - previous_error) / DT; 
 110:Core/Src/main.c ****     output = Kp * error + Ki * integral + Kd * derivative;
 111:Core/Src/main.c ****     previous_error = error;
 112:Core/Src/main.c ****     if (output > 100.0f) output = 100.0f;
 113:Core/Src/main.c ****     if (output < -100.0f) output = -100.0f;
 114:Core/Src/main.c **** }
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** void control_motor(float output) {
 118:Core/Src/main.c ****     if (output > 0) {
 119:Core/Src/main.c ****         HAL_GPIO_WritePin(IN1_GPIO_Port, IN1_Pin, GPIO_PIN_SET);   
 120:Core/Src/main.c ****         HAL_GPIO_WritePin(IN2_GPIO_Port, IN2_Pin, GPIO_PIN_RESET); 
 121:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, (uint16_t)(output * 10)); 
 122:Core/Src/main.c ****     } else if (output < 0) {
 123:Core/Src/main.c ****         HAL_GPIO_WritePin(IN1_GPIO_Port, IN1_Pin, GPIO_PIN_RESET);   
 124:Core/Src/main.c ****         HAL_GPIO_WritePin(IN2_GPIO_Port, IN2_Pin, GPIO_PIN_SET);
 125:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, (uint16_t)(-output * 10));
 126:Core/Src/main.c ****     } else {
 127:Core/Src/main.c ****         HAL_GPIO_WritePin(IN1_GPIO_Port, IN1_Pin, GPIO_PIN_RESET); 
 128:Core/Src/main.c ****         HAL_GPIO_WritePin(IN2_GPIO_Port, IN2_Pin, GPIO_PIN_RESET);
 129:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0);    // PWM = 0
 130:Core/Src/main.c ****     }
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** //---------------------------------------------CAN-------------------------------------------------
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** void debug_print(const char* msg) {
 137:Core/Src/main.c ****     HAL_UART_Transmit(&huart6, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 138:Core/Src/main.c **** }
 139:Core/Src/main.c **** void CAN_Filter_Config(void) {  
 140:Core/Src/main.c **** 	CAN_FilterTypeDef filter;
 141:Core/Src/main.c **** 	filter.FilterActivation = ENABLE;
 142:Core/Src/main.c **** 	filter.FilterBank = 0;
 143:Core/Src/main.c **** 	filter.FilterFIFOAssignment = CAN_RX_FIFO0;
 144:Core/Src/main.c **** 	filter.FilterIdHigh = 0x100<<5;
 145:Core/Src/main.c **** 	filter.FilterIdLow = 0x0000;
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 4


 146:Core/Src/main.c **** 	filter.FilterMaskIdHigh = 0x100<<5;
 147:Core/Src/main.c **** 	filter.FilterMaskIdLow = 0x0000;
 148:Core/Src/main.c **** 	filter.FilterMode = CAN_FILTERMODE_IDMASK;
 149:Core/Src/main.c **** 	filter.FilterScale = CAN_FILTERSCALE_32BIT;
 150:Core/Src/main.c **** 	
 151:Core/Src/main.c **** 	HAL_CAN_ConfigFilter(&hcan1, &filter);
 152:Core/Src/main.c **** 	
 153:Core/Src/main.c ****   // Bộ l�?c cho ID 0x123 (FilterBank 1)
 154:Core/Src/main.c ****     filter.FilterBank = 1;                      // Sử dụng FilterBank 1
 155:Core/Src/main.c ****     filter.FilterMode = CAN_FILTERMODE_IDLIST;   // Chế độ danh sách ID
 156:Core/Src/main.c ****     filter.FilterScale = CAN_FILTERSCALE_32BIT;  // Quy mô bộ l�?c 32-bit
 157:Core/Src/main.c ****     filter.FilterIdHigh = 0x101 << 5;           // ID 0x123 (dịch trái 5 bit)
 158:Core/Src/main.c ****     filter.FilterIdLow = 0;                     // Không sử dụng ID thứ hai
 159:Core/Src/main.c ****     filter.FilterMaskIdHigh = 0x101<<5;                // Không dùng mặt nạ
 160:Core/Src/main.c ****     filter.FilterMaskIdLow = 0;                 // Không dùng mặt nạ
 161:Core/Src/main.c ****     filter.FilterFIFOAssignment = CAN_RX_FIFO0; // Gán vào FIFO0
 162:Core/Src/main.c ****     filter.FilterActivation = ENABLE;           // Kích hoạt bộ l�?c
 163:Core/Src/main.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &filter) != HAL_OK) {
 164:Core/Src/main.c ****         debug_print("CAN Filter Config Failed (Bank 1)\r\n");
 165:Core/Src/main.c ****         Error_Handler();
 166:Core/Src/main.c ****     }
 167:Core/Src/main.c **** 	
 168:Core/Src/main.c **** }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** CAN_RxHeaderTypeDef rx_header;
 171:Core/Src/main.c **** void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
 172:Core/Src/main.c **** {
 173:Core/Src/main.c **** 		char buff[50];
 174:Core/Src/main.c **** 		sprintf(buff, "Message Transmitted: M0\n");
 175:Core/Src/main.c **** 		HAL_UART_Transmit(&huart6, (uint8_t *)buff, strlen(buff), HAL_MAX_DELAY);
 176:Core/Src/main.c **** 	
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
 179:Core/Src/main.c **** {
 180:Core/Src/main.c **** 		char buff[50];
 181:Core/Src/main.c **** 		sprintf(buff, "Message Transmitted: M1\n");
 182:Core/Src/main.c **** 		HAL_UART_Transmit(&huart6, (uint8_t *)buff, strlen(buff), HAL_MAX_DELAY);
 183:Core/Src/main.c **** }
 184:Core/Src/main.c **** void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
 185:Core/Src/main.c **** {
 186:Core/Src/main.c **** 		char buff[50];
 187:Core/Src/main.c **** 		sprintf(buff, "Message Transmitted: M2\n");
 188:Core/Src/main.c **** 		HAL_UART_Transmit(&huart6, (uint8_t *)buff, strlen(buff), HAL_MAX_DELAY);
 189:Core/Src/main.c **** }
 190:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 191:Core/Src/main.c ****  
 192:Core/Src/main.c ****     uint8_t rx_data[4];
 193:Core/Src/main.c ****     char msg[80];
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****     if (HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rx_header, rx_data) == HAL_OK) {
 196:Core/Src/main.c ****         if (rx_header.StdId == 0x100) {
 197:Core/Src/main.c ****             TPS1 = (rx_data[1] << 8) | rx_data[0];
 198:Core/Src/main.c ****             TPS2 = (rx_data[3] << 8) | rx_data[2];
 199:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "Received TPS1=%u, TPS2=%u\r\n", TPS1, TPS2);
 200:Core/Src/main.c ****             debug_print(msg);
 201:Core/Src/main.c ****         }
 202:Core/Src/main.c ****         else if (rx_header.StdId == 0x101) {
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 5


 203:Core/Src/main.c ****             setpoint = rx_data[0];
 204:Core/Src/main.c ****             Ki = rx_data[1];
 205:Core/Src/main.c ****             Kp = rx_data[2];
 206:Core/Src/main.c ****             Kd = rx_data [3];
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****             Ki = Ki*10/256;
 209:Core/Src/main.c ****             Kp = Kp*10/256;
 210:Core/Src/main.c ****             Kd = Kd*10/256;
 211:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "CAN: setpoint=%.2f, Ki=%.2f, Kp=%.2f, Ki=%.2f\r\n", setpoin
 212:Core/Src/main.c ****             debug_print(msg);
 213:Core/Src/main.c ****         }
 214:Core/Src/main.c ****     }
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 219:Core/Src/main.c ****   timer_run();
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /* USER CODE END PFP */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 226:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /* USER CODE END 0 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** /**
 231:Core/Src/main.c ****   * @brief  The application entry point.
 232:Core/Src/main.c ****   * @retval int
 233:Core/Src/main.c ****   */
 234:Core/Src/main.c **** int main(void)
 235:Core/Src/main.c **** {
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END 1 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 244:Core/Src/main.c ****   HAL_Init();
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE END Init */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* Configure the system clock */
 251:Core/Src/main.c ****   SystemClock_Config();
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE END SysInit */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* Initialize all configured peripherals */
 258:Core/Src/main.c ****   MX_GPIO_Init();
 259:Core/Src/main.c ****   MX_CAN1_Init();
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 6


 260:Core/Src/main.c ****   MX_TIM1_Init();
 261:Core/Src/main.c ****   MX_TIM2_Init();
 262:Core/Src/main.c ****   MX_USART6_UART_Init();
 263:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 264:Core/Src/main.c ****   CAN_Filter_Config();
 265:Core/Src/main.c ****     if (HAL_CAN_Start(&hcan1) != HAL_OK) {
 266:Core/Src/main.c ****         debug_print("CAN Start Failed\r\n");
 267:Core/Src/main.c ****         Error_Handler();
 268:Core/Src/main.c ****     }
 269:Core/Src/main.c ****     HAL_CAN_ActivateNotification(&hcan1, CAN_IT_TX_MAILBOX_EMPTY | CAN_IT_RX_FIFO0_MSG_PENDING | CA
 270:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 271:Core/Src/main.c ****      HAL_TIM_Base_Start_IT(&htim2);
 272:Core/Src/main.c ****   set_timer(0, 10);
 273:Core/Src/main.c ****   /* USER CODE END 2 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* Infinite loop */
 276:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 277:Core/Src/main.c ****   while (1)
 278:Core/Src/main.c ****   {
 279:Core/Src/main.c ****     if(timerFLag[0] == 1)
 280:Core/Src/main.c ****     {
 281:Core/Src/main.c ****       position = calculate_position(TPS1); 
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****       PID_control(); 
 284:Core/Src/main.c ****       control_motor(output); 
 285:Core/Src/main.c ****       set_timer(0, 10);
 286:Core/Src/main.c ****     }
 287:Core/Src/main.c ****   
 288:Core/Src/main.c ****     /* USER CODE END WHILE */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c ****   /* USER CODE END 3 */
 293:Core/Src/main.c **** }
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /**
 296:Core/Src/main.c ****   * @brief System Clock Configuration
 297:Core/Src/main.c ****   * @retval None
 298:Core/Src/main.c ****   */
 299:Core/Src/main.c **** void SystemClock_Config(void)
 300:Core/Src/main.c **** {
 301:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 302:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 305:Core/Src/main.c ****   */
 306:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 307:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 310:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 311:Core/Src/main.c ****   */
 312:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 313:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 314:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 7


 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 321:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 322:Core/Src/main.c ****   {
 323:Core/Src/main.c ****     Error_Handler();
 324:Core/Src/main.c ****   }
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 327:Core/Src/main.c ****   */
 328:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 329:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 330:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 331:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 332:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 333:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****     Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c **** }
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** /**
 342:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 343:Core/Src/main.c ****   * @param None
 344:Core/Src/main.c ****   * @retval None
 345:Core/Src/main.c ****   */
 346:Core/Src/main.c **** static void MX_CAN1_Init(void)
 347:Core/Src/main.c **** {
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 356:Core/Src/main.c ****   hcan1.Instance = CAN1;
 357:Core/Src/main.c ****   hcan1.Init.Prescaler = 8;
 358:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 359:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 360:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_6TQ;
 361:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 362:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 363:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 364:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 365:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 366:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 367:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 368:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 369:Core/Src/main.c ****   {
 370:Core/Src/main.c ****     Error_Handler();
 371:Core/Src/main.c ****   }
 372:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 373:Core/Src/main.c **** 
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 8


 374:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** }
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** /**
 379:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 380:Core/Src/main.c ****   * @param None
 381:Core/Src/main.c ****   * @retval None
 382:Core/Src/main.c ****   */
 383:Core/Src/main.c **** static void MX_TIM1_Init(void)
 384:Core/Src/main.c **** {
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 391:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 392:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 397:Core/Src/main.c ****   htim1.Instance = TIM1;
 398:Core/Src/main.c ****   htim1.Init.Prescaler = 63;
 399:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 400:Core/Src/main.c ****   htim1.Init.Period = 999;
 401:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 402:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 403:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 404:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c ****     Error_Handler();
 407:Core/Src/main.c ****   }
 408:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 409:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 410:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 411:Core/Src/main.c ****   {
 412:Core/Src/main.c ****     Error_Handler();
 413:Core/Src/main.c ****   }
 414:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 415:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 416:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 417:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 418:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 419:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 420:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 421:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 422:Core/Src/main.c ****   {
 423:Core/Src/main.c ****     Error_Handler();
 424:Core/Src/main.c ****   }
 425:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 426:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 427:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 428:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 429:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 430:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 9


 431:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 432:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 433:Core/Src/main.c ****   {
 434:Core/Src/main.c ****     Error_Handler();
 435:Core/Src/main.c ****   }
 436:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 439:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** }
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** /**
 444:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 445:Core/Src/main.c ****   * @param None
 446:Core/Src/main.c ****   * @retval None
 447:Core/Src/main.c ****   */
 448:Core/Src/main.c **** static void MX_TIM2_Init(void)
 449:Core/Src/main.c **** {
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 456:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 457:Core/Src/main.c **** 
 458:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 461:Core/Src/main.c ****   htim2.Instance = TIM2;
 462:Core/Src/main.c ****   htim2.Init.Prescaler = 639;
 463:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 464:Core/Src/main.c ****   htim2.Init.Period = 999;
 465:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 466:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 467:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 468:Core/Src/main.c ****   {
 469:Core/Src/main.c ****     Error_Handler();
 470:Core/Src/main.c ****   }
 471:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 472:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 473:Core/Src/main.c ****   {
 474:Core/Src/main.c ****     Error_Handler();
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 477:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 478:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 479:Core/Src/main.c ****   {
 480:Core/Src/main.c ****     Error_Handler();
 481:Core/Src/main.c ****   }
 482:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** }
 487:Core/Src/main.c **** 
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 10


 488:Core/Src/main.c **** /**
 489:Core/Src/main.c ****   * @brief USART6 Initialization Function
 490:Core/Src/main.c ****   * @param None
 491:Core/Src/main.c ****   * @retval None
 492:Core/Src/main.c ****   */
 493:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
 494:Core/Src/main.c **** {
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
 503:Core/Src/main.c ****   huart6.Instance = USART6;
 504:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 505:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 506:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 507:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 508:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 509:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 510:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 511:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 512:Core/Src/main.c ****   {
 513:Core/Src/main.c ****     Error_Handler();
 514:Core/Src/main.c ****   }
 515:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
 516:Core/Src/main.c **** 
 517:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** }
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** /**
 522:Core/Src/main.c ****   * @brief GPIO Initialization Function
 523:Core/Src/main.c ****   * @param None
 524:Core/Src/main.c ****   * @retval None
 525:Core/Src/main.c ****   */
 526:Core/Src/main.c **** static void MX_GPIO_Init(void)
 527:Core/Src/main.c **** {
  28              		.loc 1 527 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 528:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 528 3 view .LVU1
  42              		.loc 1 528 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 11


  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 529:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 530:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 533:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 533 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 533 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 533 3 view .LVU5
  54 0012 234B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 533 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 533 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 533 3 view .LVU8
 534:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  66              		.loc 1 534 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 534 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 534 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F01002 		orr	r2, r2, #16
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 534 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F01002 		and	r2, r2, #16
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 534 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 534 3 view .LVU14
 535:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  82              		.loc 1 535 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 535 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 535 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00402 		orr	r2, r2, #4
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 535 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00402 		and	r2, r2, #4
  93 004a 0292     		str	r2, [sp, #8]
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 12


  94              		.loc 1 535 3 view .LVU19
  95 004c 029A     		ldr	r2, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 535 3 view .LVU20
 536:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  98              		.loc 1 536 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 536 3 view .LVU22
 101 004e 0394     		str	r4, [sp, #12]
 102              		.loc 1 536 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00102 		orr	r2, r2, #1
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 536 3 view .LVU24
 107 0058 1A6B     		ldr	r2, [r3, #48]
 108 005a 02F00102 		and	r2, r2, #1
 109 005e 0392     		str	r2, [sp, #12]
 110              		.loc 1 536 3 view .LVU25
 111 0060 039A     		ldr	r2, [sp, #12]
 112              	.LBE7:
 113              		.loc 1 536 3 view .LVU26
 537:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 114              		.loc 1 537 3 view .LVU27
 115              	.LBB8:
 116              		.loc 1 537 3 view .LVU28
 117 0062 0494     		str	r4, [sp, #16]
 118              		.loc 1 537 3 view .LVU29
 119 0064 1A6B     		ldr	r2, [r3, #48]
 120 0066 42F00202 		orr	r2, r2, #2
 121 006a 1A63     		str	r2, [r3, #48]
 122              		.loc 1 537 3 view .LVU30
 123 006c 1B6B     		ldr	r3, [r3, #48]
 124 006e 03F00203 		and	r3, r3, #2
 125 0072 0493     		str	r3, [sp, #16]
 126              		.loc 1 537 3 view .LVU31
 127 0074 049B     		ldr	r3, [sp, #16]
 128              	.LBE8:
 129              		.loc 1 537 3 view .LVU32
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 540:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, IN1_Pin|IN2_Pin, GPIO_PIN_RESET);
 130              		.loc 1 540 3 view .LVU33
 131 0076 0B4D     		ldr	r5, .L3+4
 132 0078 2246     		mov	r2, r4
 133 007a 4FF42051 		mov	r1, #10240
 134 007e 2846     		mov	r0, r5
 135 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 136              	.LVL0:
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /*Configure GPIO pins : IN1_Pin IN2_Pin */
 543:Core/Src/main.c ****   GPIO_InitStruct.Pin = IN1_Pin|IN2_Pin;
 137              		.loc 1 543 3 view .LVU34
 138              		.loc 1 543 23 is_stmt 0 view .LVU35
 139 0084 4FF42053 		mov	r3, #10240
 140 0088 0593     		str	r3, [sp, #20]
 544:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 141              		.loc 1 544 3 is_stmt 1 view .LVU36
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 13


 142              		.loc 1 544 24 is_stmt 0 view .LVU37
 143 008a 0123     		movs	r3, #1
 144 008c 0693     		str	r3, [sp, #24]
 545:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 545 3 is_stmt 1 view .LVU38
 146              		.loc 1 545 24 is_stmt 0 view .LVU39
 147 008e 0794     		str	r4, [sp, #28]
 546:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 546 3 is_stmt 1 view .LVU40
 149              		.loc 1 546 25 is_stmt 0 view .LVU41
 150 0090 0894     		str	r4, [sp, #32]
 547:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 151              		.loc 1 547 3 is_stmt 1 view .LVU42
 152 0092 05A9     		add	r1, sp, #20
 153 0094 2846     		mov	r0, r5
 154 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL1:
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 550:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 551:Core/Src/main.c **** }
 156              		.loc 1 551 1 is_stmt 0 view .LVU43
 157 009a 0BB0     		add	sp, sp, #44
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 12
 160              		@ sp needed
 161 009c 30BD     		pop	{r4, r5, pc}
 162              	.L4:
 163 009e 00BF     		.align	2
 164              	.L3:
 165 00a0 00380240 		.word	1073887232
 166 00a4 00100240 		.word	1073876992
 167              		.cfi_endproc
 168              	.LFE154:
 170              		.global	__aeabi_f2d
 171              		.global	__aeabi_dmul
 172              		.global	__aeabi_ddiv
 173              		.global	__aeabi_d2f
 174              		.section	.text.adc_to_voltage,"ax",%progbits
 175              		.align	1
 176              		.global	adc_to_voltage
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 181              	adc_to_voltage:
 182              	.LVL2:
 183              	.LFB137:
  92:Core/Src/main.c ****     return (float)adc_value * 3.3 / ADC_MAX; // Chuyển đổi giá trị ADC sang điện áp
 184              		.loc 1 92 42 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
  92:Core/Src/main.c ****     return (float)adc_value * 3.3 / ADC_MAX; // Chuyển đổi giá trị ADC sang điện áp
 188              		.loc 1 92 42 is_stmt 0 view .LVU45
 189 0000 08B5     		push	{r3, lr}
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 14


 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 194 0002 07EE900A 		vmov	s15, r0	@ int
  93:Core/Src/main.c **** }
 195              		.loc 1 93 5 is_stmt 1 view .LVU46
  93:Core/Src/main.c **** }
 196              		.loc 1 93 12 is_stmt 0 view .LVU47
 197 0006 F8EE677A 		vcvt.f32.u32	s15, s15
 198 000a 17EE900A 		vmov	r0, s15
 199              	.LVL3:
  93:Core/Src/main.c **** }
 200              		.loc 1 93 12 view .LVU48
 201 000e FFF7FEFF 		bl	__aeabi_f2d
 202              	.LVL4:
  93:Core/Src/main.c **** }
 203              		.loc 1 93 29 view .LVU49
 204 0012 07A3     		adr	r3, .L7
 205 0014 D3E90023 		ldrd	r2, [r3]
 206 0018 FFF7FEFF 		bl	__aeabi_dmul
 207              	.LVL5:
  93:Core/Src/main.c **** }
 208              		.loc 1 93 35 view .LVU50
 209 001c 06A3     		adr	r3, .L7+8
 210 001e D3E90023 		ldrd	r2, [r3]
 211 0022 FFF7FEFF 		bl	__aeabi_ddiv
 212              	.LVL6:
 213 0026 FFF7FEFF 		bl	__aeabi_d2f
 214              	.LVL7:
  94:Core/Src/main.c **** 
 215              		.loc 1 94 1 view .LVU51
 216 002a 00EE100A 		vmov	s0, r0
 217 002e 08BD     		pop	{r3, pc}
 218              	.L8:
 219              		.align	3
 220              	.L7:
 221 0030 66666666 		.word	1717986918
 222 0034 66660A40 		.word	1074423398
 223 0038 00000000 		.word	0
 224 003c 00FEAF40 		.word	1085275648
 225              		.cfi_endproc
 226              	.LFE137:
 228              		.global	__aeabi_dsub
 229              		.section	.text.calculate_position,"ax",%progbits
 230              		.align	1
 231              		.global	calculate_position
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	calculate_position:
 237              	.LVL8:
 238              	.LFB138:
  96:Core/Src/main.c ****     float voltage = adc_to_voltage(adc_value);
 239              		.loc 1 96 46 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
  96:Core/Src/main.c ****     float voltage = adc_to_voltage(adc_value);
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 15


 243              		.loc 1 96 46 is_stmt 0 view .LVU53
 244 0000 08B5     		push	{r3, lr}
 245              	.LCFI4:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 3, -8
 248              		.cfi_offset 14, -4
  97:Core/Src/main.c ****     float position = (voltage - V_MIN) / (V_MAX - V_MIN) * 100;
 249              		.loc 1 97 5 is_stmt 1 view .LVU54
  97:Core/Src/main.c ****     float position = (voltage - V_MIN) / (V_MAX - V_MIN) * 100;
 250              		.loc 1 97 21 is_stmt 0 view .LVU55
 251 0002 FFF7FEFF 		bl	adc_to_voltage
 252              	.LVL9:
  97:Core/Src/main.c ****     float position = (voltage - V_MIN) / (V_MAX - V_MIN) * 100;
 253              		.loc 1 97 21 view .LVU56
 254 0006 10EE100A 		vmov	r0, s0
 255              	.LVL10:
  98:Core/Src/main.c ****     if (position < 0) position = 0;
 256              		.loc 1 98 5 is_stmt 1 view .LVU57
  98:Core/Src/main.c ****     if (position < 0) position = 0;
 257              		.loc 1 98 31 is_stmt 0 view .LVU58
 258 000a FFF7FEFF 		bl	__aeabi_f2d
 259              	.LVL11:
  98:Core/Src/main.c ****     if (position < 0) position = 0;
 260              		.loc 1 98 31 view .LVU59
 261 000e 0022     		movs	r2, #0
 262 0010 134B     		ldr	r3, .L16+8
 263 0012 FFF7FEFF 		bl	__aeabi_dsub
 264              	.LVL12:
  98:Core/Src/main.c ****     if (position < 0) position = 0;
 265              		.loc 1 98 40 view .LVU60
 266 0016 10A3     		adr	r3, .L16
 267 0018 D3E90023 		ldrd	r2, [r3]
 268 001c FFF7FEFF 		bl	__aeabi_ddiv
 269              	.LVL13:
  98:Core/Src/main.c ****     if (position < 0) position = 0;
 270              		.loc 1 98 58 view .LVU61
 271 0020 0022     		movs	r2, #0
 272 0022 104B     		ldr	r3, .L16+12
 273 0024 FFF7FEFF 		bl	__aeabi_dmul
 274              	.LVL14:
  98:Core/Src/main.c ****     if (position < 0) position = 0;
 275              		.loc 1 98 11 view .LVU62
 276 0028 FFF7FEFF 		bl	__aeabi_d2f
 277              	.LVL15:
 278 002c 00EE100A 		vmov	s0, r0
 279              	.LVL16:
  99:Core/Src/main.c ****     if (position > 100) position = 100;
 280              		.loc 1 99 5 is_stmt 1 view .LVU63
  99:Core/Src/main.c ****     if (position > 100) position = 100;
 281              		.loc 1 99 8 is_stmt 0 view .LVU64
 282 0030 B5EEC00A 		vcmpe.f32	s0, #0
 283 0034 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 284 0038 09D4     		bmi	.L15
 285              	.L10:
 286              	.LVL17:
 100:Core/Src/main.c ****     return position;
 287              		.loc 1 100 5 is_stmt 1 view .LVU65
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 16


 100:Core/Src/main.c ****     return position;
 288              		.loc 1 100 8 is_stmt 0 view .LVU66
 289 003a DFED0B7A 		vldr.32	s15, .L16+16
 290 003e B4EEE70A 		vcmpe.f32	s0, s15
 291 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 292 0046 01DD     		ble	.L9
 100:Core/Src/main.c ****     return position;
 293              		.loc 1 100 34 view .LVU67
 294 0048 B0EE670A 		vmov.f32	s0, s15
 295              	.LVL18:
 101:Core/Src/main.c **** }
 296              		.loc 1 101 5 is_stmt 1 view .LVU68
 297              	.L9:
 102:Core/Src/main.c **** 
 298              		.loc 1 102 1 is_stmt 0 view .LVU69
 299 004c 08BD     		pop	{r3, pc}
 300              	.LVL19:
 301              	.L15:
  99:Core/Src/main.c ****     if (position > 100) position = 100;
 302              		.loc 1 99 32 view .LVU70
 303 004e 9FED070A 		vldr.32	s0, .L16+20
 304 0052 F2E7     		b	.L10
 305              	.L17:
 306 0054 AFF30080 		.align	3
 307              	.L16:
 308 0058 C3F5285C 		.word	1546188227
 309 005c 8FC20340 		.word	1073988239
 310 0060 0000E03F 		.word	1071644672
 311 0064 00005940 		.word	1079574528
 312 0068 0000C842 		.word	1120403456
 313 006c 00000000 		.word	0
 314              		.cfi_endproc
 315              	.LFE138:
 317              		.global	__aeabi_dadd
 318              		.section	.text.PID_control,"ax",%progbits
 319              		.align	1
 320              		.global	PID_control
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	PID_control:
 326              	.LFB139:
 104:Core/Src/main.c ****     error = setpoint - position;
 327              		.loc 1 104 20 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 70B5     		push	{r4, r5, r6, lr}
 332              	.LCFI5:
 333              		.cfi_def_cfa_offset 16
 334              		.cfi_offset 4, -16
 335              		.cfi_offset 5, -12
 336              		.cfi_offset 6, -8
 337              		.cfi_offset 14, -4
 338 0002 2DED028B 		vpush.64	{d8}
 339              	.LCFI6:
 340              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 17


 341              		.cfi_offset 80, -24
 342              		.cfi_offset 81, -20
 105:Core/Src/main.c ****     integral += error * DT; 
 343              		.loc 1 105 5 view .LVU72
 105:Core/Src/main.c ****     integral += error * DT; 
 344              		.loc 1 105 22 is_stmt 0 view .LVU73
 345 0006 424B     		ldr	r3, .L32+8
 346 0008 93ED008A 		vldr.32	s16, [r3]
 347 000c 414B     		ldr	r3, .L32+12
 348 000e D3ED007A 		vldr.32	s15, [r3]
 349 0012 38EE678A 		vsub.f32	s16, s16, s15
 105:Core/Src/main.c ****     integral += error * DT; 
 350              		.loc 1 105 11 view .LVU74
 351 0016 404B     		ldr	r3, .L32+16
 352 0018 83ED008A 		vstr.32	s16, [r3]
 106:Core/Src/main.c ****     if (integral > 1000.0f) integral = 1000.0f; 
 353              		.loc 1 106 5 is_stmt 1 view .LVU75
 106:Core/Src/main.c ****     if (integral > 1000.0f) integral = 1000.0f; 
 354              		.loc 1 106 23 is_stmt 0 view .LVU76
 355 001c 18EE100A 		vmov	r0, s16
 356 0020 FFF7FEFF 		bl	__aeabi_f2d
 357              	.LVL20:
 358 0024 38A3     		adr	r3, .L32
 359 0026 D3E90023 		ldrd	r2, [r3]
 360 002a FFF7FEFF 		bl	__aeabi_dmul
 361              	.LVL21:
 362 002e 0446     		mov	r4, r0
 363 0030 0D46     		mov	r5, r1
 106:Core/Src/main.c ****     if (integral > 1000.0f) integral = 1000.0f; 
 364              		.loc 1 106 14 view .LVU77
 365 0032 3A4E     		ldr	r6, .L32+20
 366 0034 3068     		ldr	r0, [r6]	@ float
 367 0036 FFF7FEFF 		bl	__aeabi_f2d
 368              	.LVL22:
 369 003a 2246     		mov	r2, r4
 370 003c 2B46     		mov	r3, r5
 371 003e FFF7FEFF 		bl	__aeabi_dadd
 372              	.LVL23:
 373 0042 FFF7FEFF 		bl	__aeabi_d2f
 374              	.LVL24:
 375 0046 07EE900A 		vmov	s15, r0
 376 004a 3060     		str	r0, [r6]	@ float
 107:Core/Src/main.c ****     if (integral < -1000.0f) integral = -1000.0f;
 377              		.loc 1 107 5 is_stmt 1 view .LVU78
 107:Core/Src/main.c ****     if (integral < -1000.0f) integral = -1000.0f;
 378              		.loc 1 107 8 is_stmt 0 view .LVU79
 379 004c 9FED347A 		vldr.32	s14, .L32+24
 380 0050 F4EEC77A 		vcmpe.f32	s15, s14
 381 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 382 0058 01DD     		ble	.L19
 107:Core/Src/main.c ****     if (integral < -1000.0f) integral = -1000.0f;
 383              		.loc 1 107 29 is_stmt 1 discriminator 1 view .LVU80
 107:Core/Src/main.c ****     if (integral < -1000.0f) integral = -1000.0f;
 384              		.loc 1 107 38 is_stmt 0 discriminator 1 view .LVU81
 385 005a 86ED007A 		vstr.32	s14, [r6]
 386              	.L19:
 108:Core/Src/main.c ****     derivative = (error - previous_error) / DT; 
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 18


 387              		.loc 1 108 5 is_stmt 1 view .LVU82
 108:Core/Src/main.c ****     derivative = (error - previous_error) / DT; 
 388              		.loc 1 108 18 is_stmt 0 view .LVU83
 389 005e 2F4B     		ldr	r3, .L32+20
 390 0060 93ED007A 		vldr.32	s14, [r3]
 108:Core/Src/main.c ****     derivative = (error - previous_error) / DT; 
 391              		.loc 1 108 8 view .LVU84
 392 0064 DFED2F7A 		vldr.32	s15, .L32+28
 393 0068 B4EEE77A 		vcmpe.f32	s14, s15
 394 006c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 395 0070 01D5     		bpl	.L21
 108:Core/Src/main.c ****     derivative = (error - previous_error) / DT; 
 396              		.loc 1 108 30 is_stmt 1 discriminator 1 view .LVU85
 108:Core/Src/main.c ****     derivative = (error - previous_error) / DT; 
 397              		.loc 1 108 39 is_stmt 0 discriminator 1 view .LVU86
 398 0072 C3ED007A 		vstr.32	s15, [r3]
 399              	.L21:
 109:Core/Src/main.c ****     output = Kp * error + Ki * integral + Kd * derivative;
 400              		.loc 1 109 5 is_stmt 1 view .LVU87
 109:Core/Src/main.c ****     output = Kp * error + Ki * integral + Kd * derivative;
 401              		.loc 1 109 25 is_stmt 0 view .LVU88
 402 0076 2C4C     		ldr	r4, .L32+32
 403 0078 D4ED007A 		vldr.32	s15, [r4]
 404 007c 78EE677A 		vsub.f32	s15, s16, s15
 405 0080 17EE900A 		vmov	r0, s15
 406 0084 FFF7FEFF 		bl	__aeabi_f2d
 407              	.LVL25:
 109:Core/Src/main.c ****     output = Kp * error + Ki * integral + Kd * derivative;
 408              		.loc 1 109 43 view .LVU89
 409 0088 1FA3     		adr	r3, .L32
 410 008a D3E90023 		ldrd	r2, [r3]
 411 008e FFF7FEFF 		bl	__aeabi_ddiv
 412              	.LVL26:
 413 0092 FFF7FEFF 		bl	__aeabi_d2f
 414              	.LVL27:
 415 0096 07EE100A 		vmov	s14, r0
 109:Core/Src/main.c ****     output = Kp * error + Ki * integral + Kd * derivative;
 416              		.loc 1 109 16 view .LVU90
 417 009a 244B     		ldr	r3, .L32+36
 418 009c 1860     		str	r0, [r3]	@ float
 110:Core/Src/main.c ****     previous_error = error;
 419              		.loc 1 110 5 is_stmt 1 view .LVU91
 110:Core/Src/main.c ****     previous_error = error;
 420              		.loc 1 110 17 is_stmt 0 view .LVU92
 421 009e 244B     		ldr	r3, .L32+40
 422 00a0 D3ED007A 		vldr.32	s15, [r3]
 423 00a4 68EE277A 		vmul.f32	s15, s16, s15
 110:Core/Src/main.c ****     previous_error = error;
 424              		.loc 1 110 30 view .LVU93
 425 00a8 224B     		ldr	r3, .L32+44
 426 00aa D3ED006A 		vldr.32	s13, [r3]
 427 00ae 1B4B     		ldr	r3, .L32+20
 428 00b0 93ED006A 		vldr.32	s12, [r3]
 429 00b4 66EE866A 		vmul.f32	s13, s13, s12
 110:Core/Src/main.c ****     previous_error = error;
 430              		.loc 1 110 25 view .LVU94
 431 00b8 77EEA67A 		vadd.f32	s15, s15, s13
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 19


 110:Core/Src/main.c ****     previous_error = error;
 432              		.loc 1 110 46 view .LVU95
 433 00bc 1E4B     		ldr	r3, .L32+48
 434 00be D3ED006A 		vldr.32	s13, [r3]
 435 00c2 27EE267A 		vmul.f32	s14, s14, s13
 110:Core/Src/main.c ****     previous_error = error;
 436              		.loc 1 110 41 view .LVU96
 437 00c6 77EE877A 		vadd.f32	s15, s15, s14
 110:Core/Src/main.c ****     previous_error = error;
 438              		.loc 1 110 12 view .LVU97
 439 00ca 1C4B     		ldr	r3, .L32+52
 440 00cc C3ED007A 		vstr.32	s15, [r3]
 111:Core/Src/main.c ****     if (output > 100.0f) output = 100.0f;
 441              		.loc 1 111 5 is_stmt 1 view .LVU98
 111:Core/Src/main.c ****     if (output > 100.0f) output = 100.0f;
 442              		.loc 1 111 20 is_stmt 0 view .LVU99
 443 00d0 84ED008A 		vstr.32	s16, [r4]
 112:Core/Src/main.c ****     if (output < -100.0f) output = -100.0f;
 444              		.loc 1 112 5 is_stmt 1 view .LVU100
 112:Core/Src/main.c ****     if (output < -100.0f) output = -100.0f;
 445              		.loc 1 112 8 is_stmt 0 view .LVU101
 446 00d4 9FED1A7A 		vldr.32	s14, .L32+56
 447 00d8 F4EEC77A 		vcmpe.f32	s15, s14
 448 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 449 00e0 01DD     		ble	.L23
 112:Core/Src/main.c ****     if (output < -100.0f) output = -100.0f;
 450              		.loc 1 112 26 is_stmt 1 discriminator 1 view .LVU102
 112:Core/Src/main.c ****     if (output < -100.0f) output = -100.0f;
 451              		.loc 1 112 33 is_stmt 0 discriminator 1 view .LVU103
 452 00e2 83ED007A 		vstr.32	s14, [r3]
 453              	.L23:
 113:Core/Src/main.c **** }
 454              		.loc 1 113 5 is_stmt 1 view .LVU104
 113:Core/Src/main.c **** }
 455              		.loc 1 113 16 is_stmt 0 view .LVU105
 456 00e6 154B     		ldr	r3, .L32+52
 457 00e8 93ED007A 		vldr.32	s14, [r3]
 113:Core/Src/main.c **** }
 458              		.loc 1 113 8 view .LVU106
 459 00ec DFED157A 		vldr.32	s15, .L32+60
 460 00f0 B4EEE77A 		vcmpe.f32	s14, s15
 461 00f4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 462 00f8 01D5     		bpl	.L18
 113:Core/Src/main.c **** }
 463              		.loc 1 113 27 is_stmt 1 discriminator 1 view .LVU107
 113:Core/Src/main.c **** }
 464              		.loc 1 113 34 is_stmt 0 discriminator 1 view .LVU108
 465 00fa C3ED007A 		vstr.32	s15, [r3]
 466              	.L18:
 114:Core/Src/main.c **** 
 467              		.loc 1 114 1 view .LVU109
 468 00fe BDEC028B 		vldm	sp!, {d8}
 469              	.LCFI7:
 470              		.cfi_restore 80
 471              		.cfi_restore 81
 472              		.cfi_def_cfa_offset 16
 473 0102 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 20


 474              	.L33:
 475 0104 AFF30080 		.align	3
 476              	.L32:
 477 0108 FCA9F1D2 		.word	-755914244
 478 010c 4D62503F 		.word	1062232653
 479 0110 00000000 		.word	.LANCHOR0
 480 0114 00000000 		.word	.LANCHOR1
 481 0118 00000000 		.word	.LANCHOR2
 482 011c 00000000 		.word	.LANCHOR3
 483 0120 00007A44 		.word	1148846080
 484 0124 00007AC4 		.word	-998637568
 485 0128 00000000 		.word	.LANCHOR4
 486 012c 00000000 		.word	.LANCHOR5
 487 0130 00000000 		.word	.LANCHOR6
 488 0134 00000000 		.word	.LANCHOR7
 489 0138 00000000 		.word	.LANCHOR8
 490 013c 00000000 		.word	.LANCHOR9
 491 0140 0000C842 		.word	1120403456
 492 0144 0000C8C2 		.word	-1027080192
 493              		.cfi_endproc
 494              	.LFE139:
 496              		.section	.text.control_motor,"ax",%progbits
 497              		.align	1
 498              		.global	control_motor
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 503              	control_motor:
 504              	.LVL28:
 505              	.LFB140:
 117:Core/Src/main.c ****     if (output > 0) {
 506              		.loc 1 117 34 is_stmt 1 view -0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 117:Core/Src/main.c ****     if (output > 0) {
 510              		.loc 1 117 34 is_stmt 0 view .LVU111
 511 0000 10B5     		push	{r4, lr}
 512              	.LCFI8:
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 4, -8
 515              		.cfi_offset 14, -4
 516 0002 2DED028B 		vpush.64	{d8}
 517              	.LCFI9:
 518              		.cfi_def_cfa_offset 16
 519              		.cfi_offset 80, -16
 520              		.cfi_offset 81, -12
 521 0006 B0EE408A 		vmov.f32	s16, s0
 118:Core/Src/main.c ****         HAL_GPIO_WritePin(IN1_GPIO_Port, IN1_Pin, GPIO_PIN_SET);   
 522              		.loc 1 118 5 is_stmt 1 view .LVU112
 118:Core/Src/main.c ****         HAL_GPIO_WritePin(IN1_GPIO_Port, IN1_Pin, GPIO_PIN_SET);   
 523              		.loc 1 118 8 is_stmt 0 view .LVU113
 524 000a B5EEC00A 		vcmpe.f32	s0, #0
 525 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 526 0012 16DC     		bgt	.L45
 122:Core/Src/main.c ****         HAL_GPIO_WritePin(IN1_GPIO_Port, IN1_Pin, GPIO_PIN_RESET);   
 527              		.loc 1 122 12 is_stmt 1 view .LVU114
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 21


 122:Core/Src/main.c ****         HAL_GPIO_WritePin(IN1_GPIO_Port, IN1_Pin, GPIO_PIN_RESET);   
 528              		.loc 1 122 15 is_stmt 0 view .LVU115
 529 0014 B5EEC00A 		vcmpe.f32	s0, #0
 530 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 531 001c 2DD4     		bmi	.L46
 127:Core/Src/main.c ****         HAL_GPIO_WritePin(IN2_GPIO_Port, IN2_Pin, GPIO_PIN_RESET);
 532              		.loc 1 127 9 is_stmt 1 view .LVU116
 533 001e 244C     		ldr	r4, .L47
 534 0020 0022     		movs	r2, #0
 535 0022 4FF40061 		mov	r1, #2048
 536 0026 2046     		mov	r0, r4
 537 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 538              	.LVL29:
 128:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0);    // PWM = 0
 539              		.loc 1 128 9 view .LVU117
 540 002c 0022     		movs	r2, #0
 541 002e 4FF40051 		mov	r1, #8192
 542 0032 2046     		mov	r0, r4
 543 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 544              	.LVL30:
 129:Core/Src/main.c ****     }
 545              		.loc 1 129 9 view .LVU118
 546 0038 1E4B     		ldr	r3, .L47+4
 547 003a 1B68     		ldr	r3, [r3]
 548 003c 0022     		movs	r2, #0
 549 003e 5A63     		str	r2, [r3, #52]
 131:Core/Src/main.c **** 
 550              		.loc 1 131 1 is_stmt 0 view .LVU119
 551 0040 18E0     		b	.L34
 552              	.LVL31:
 553              	.L45:
 119:Core/Src/main.c ****         HAL_GPIO_WritePin(IN2_GPIO_Port, IN2_Pin, GPIO_PIN_RESET); 
 554              		.loc 1 119 9 is_stmt 1 view .LVU120
 555 0042 1B4C     		ldr	r4, .L47
 556 0044 0122     		movs	r2, #1
 557 0046 4FF40061 		mov	r1, #2048
 558 004a 2046     		mov	r0, r4
 559 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 560              	.LVL32:
 120:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, (uint16_t)(output * 10)); 
 561              		.loc 1 120 9 view .LVU121
 562 0050 0022     		movs	r2, #0
 563 0052 4FF40051 		mov	r1, #8192
 564 0056 2046     		mov	r0, r4
 565 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 566              	.LVL33:
 121:Core/Src/main.c ****     } else if (output < 0) {
 567              		.loc 1 121 9 view .LVU122
 568 005c B2EE040A 		vmov.f32	s0, #1.0e+1
 569 0060 28EE008A 		vmul.f32	s16, s16, s0
 570              	.LVL34:
 121:Core/Src/main.c ****     } else if (output < 0) {
 571              		.loc 1 121 9 is_stmt 0 view .LVU123
 572 0064 134B     		ldr	r3, .L47+4
 573 0066 1A68     		ldr	r2, [r3]
 574 0068 BCEEC88A 		vcvt.u32.f32	s16, s16
 575 006c 18EE103A 		vmov	r3, s16	@ int
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 22


 576 0070 9BB2     		uxth	r3, r3
 577 0072 5363     		str	r3, [r2, #52]
 578              	.L34:
 131:Core/Src/main.c **** 
 579              		.loc 1 131 1 view .LVU124
 580 0074 BDEC028B 		vldm	sp!, {d8}
 581              	.LCFI10:
 582              		.cfi_remember_state
 583              		.cfi_restore 80
 584              		.cfi_restore 81
 585              		.cfi_def_cfa_offset 8
 586 0078 10BD     		pop	{r4, pc}
 587              	.LVL35:
 588              	.L46:
 589              	.LCFI11:
 590              		.cfi_restore_state
 123:Core/Src/main.c ****         HAL_GPIO_WritePin(IN2_GPIO_Port, IN2_Pin, GPIO_PIN_SET);
 591              		.loc 1 123 9 is_stmt 1 view .LVU125
 592 007a 0D4C     		ldr	r4, .L47
 593 007c 0022     		movs	r2, #0
 594 007e 4FF40061 		mov	r1, #2048
 595 0082 2046     		mov	r0, r4
 596 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 597              	.LVL36:
 124:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, (uint16_t)(-output * 10));
 598              		.loc 1 124 9 view .LVU126
 599 0088 0122     		movs	r2, #1
 600 008a 4FF40051 		mov	r1, #8192
 601 008e 2046     		mov	r0, r4
 602 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 603              	.LVL37:
 125:Core/Src/main.c ****     } else {
 604              		.loc 1 125 9 view .LVU127
 605 0094 B2EE040A 		vmov.f32	s0, #1.0e+1
 606 0098 28EE408A 		vnmul.f32	s16, s16, s0
 607              	.LVL38:
 125:Core/Src/main.c ****     } else {
 608              		.loc 1 125 9 is_stmt 0 view .LVU128
 609 009c 054B     		ldr	r3, .L47+4
 610 009e 1A68     		ldr	r2, [r3]
 611 00a0 BCEEC88A 		vcvt.u32.f32	s16, s16
 612 00a4 18EE103A 		vmov	r3, s16	@ int
 613 00a8 9BB2     		uxth	r3, r3
 614 00aa 5363     		str	r3, [r2, #52]
 615 00ac E2E7     		b	.L34
 616              	.L48:
 617 00ae 00BF     		.align	2
 618              	.L47:
 619 00b0 00100240 		.word	1073876992
 620 00b4 00000000 		.word	.LANCHOR10
 621              		.cfi_endproc
 622              	.LFE140:
 624              		.section	.text.debug_print,"ax",%progbits
 625              		.align	1
 626              		.global	debug_print
 627              		.syntax unified
 628              		.thumb
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 23


 629              		.thumb_func
 631              	debug_print:
 632              	.LVL39:
 633              	.LFB141:
 136:Core/Src/main.c ****     HAL_UART_Transmit(&huart6, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 634              		.loc 1 136 35 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 136:Core/Src/main.c ****     HAL_UART_Transmit(&huart6, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 638              		.loc 1 136 35 is_stmt 0 view .LVU130
 639 0000 10B5     		push	{r4, lr}
 640              	.LCFI12:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 4, -8
 643              		.cfi_offset 14, -4
 644 0002 0446     		mov	r4, r0
 137:Core/Src/main.c **** }
 645              		.loc 1 137 5 is_stmt 1 view .LVU131
 137:Core/Src/main.c **** }
 646              		.loc 1 137 47 is_stmt 0 view .LVU132
 647 0004 FFF7FEFF 		bl	strlen
 648              	.LVL40:
 137:Core/Src/main.c **** }
 649              		.loc 1 137 5 view .LVU133
 650 0008 4FF0FF33 		mov	r3, #-1
 651 000c 82B2     		uxth	r2, r0
 652 000e 2146     		mov	r1, r4
 653 0010 0148     		ldr	r0, .L51
 654 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 655              	.LVL41:
 138:Core/Src/main.c **** void CAN_Filter_Config(void) {  
 656              		.loc 1 138 1 view .LVU134
 657 0016 10BD     		pop	{r4, pc}
 658              	.LVL42:
 659              	.L52:
 138:Core/Src/main.c **** void CAN_Filter_Config(void) {  
 660              		.loc 1 138 1 view .LVU135
 661              		.align	2
 662              	.L51:
 663 0018 00000000 		.word	.LANCHOR11
 664              		.cfi_endproc
 665              	.LFE141:
 667              		.section	.rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4,"aMS",%progbits,1
 668              		.align	2
 669              	.LC0:
 670 0000 4D657373 		.ascii	"Message Transmitted: M0\012\000"
 670      61676520 
 670      5472616E 
 670      736D6974 
 670      7465643A 
 671              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 672              		.align	1
 673              		.global	HAL_CAN_TxMailbox0CompleteCallback
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 24


 678              	HAL_CAN_TxMailbox0CompleteCallback:
 679              	.LVL43:
 680              	.LFB143:
 172:Core/Src/main.c **** 		char buff[50];
 681              		.loc 1 172 1 is_stmt 1 view -0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 56
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 172:Core/Src/main.c **** 		char buff[50];
 685              		.loc 1 172 1 is_stmt 0 view .LVU137
 686 0000 10B5     		push	{r4, lr}
 687              	.LCFI13:
 688              		.cfi_def_cfa_offset 8
 689              		.cfi_offset 4, -8
 690              		.cfi_offset 14, -4
 691 0002 8EB0     		sub	sp, sp, #56
 692              	.LCFI14:
 693              		.cfi_def_cfa_offset 64
 173:Core/Src/main.c **** 		sprintf(buff, "Message Transmitted: M0\n");
 694              		.loc 1 173 3 is_stmt 1 view .LVU138
 174:Core/Src/main.c **** 		HAL_UART_Transmit(&huart6, (uint8_t *)buff, strlen(buff), HAL_MAX_DELAY);
 695              		.loc 1 174 3 view .LVU139
 696 0004 0DF1040C 		add	ip, sp, #4
 697 0008 0A4C     		ldr	r4, .L55
 698 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 699              	.LVL44:
 174:Core/Src/main.c **** 		HAL_UART_Transmit(&huart6, (uint8_t *)buff, strlen(buff), HAL_MAX_DELAY);
 700              		.loc 1 174 3 is_stmt 0 view .LVU140
 701 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 702 0010 94E80700 		ldm	r4, {r0, r1, r2}
 703 0014 ACE80300 		stmia	ip!, {r0, r1}
 704 0018 8CF80020 		strb	r2, [ip]
 175:Core/Src/main.c **** 	
 705              		.loc 1 175 3 is_stmt 1 view .LVU141
 175:Core/Src/main.c **** 	
 706              		.loc 1 175 47 is_stmt 0 view .LVU142
 707 001c 01A8     		add	r0, sp, #4
 708 001e FFF7FEFF 		bl	strlen
 709              	.LVL45:
 175:Core/Src/main.c **** 	
 710              		.loc 1 175 3 view .LVU143
 711 0022 4FF0FF33 		mov	r3, #-1
 712 0026 82B2     		uxth	r2, r0
 713 0028 01A9     		add	r1, sp, #4
 714 002a 0348     		ldr	r0, .L55+4
 715 002c FFF7FEFF 		bl	HAL_UART_Transmit
 716              	.LVL46:
 177:Core/Src/main.c **** void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
 717              		.loc 1 177 1 view .LVU144
 718 0030 0EB0     		add	sp, sp, #56
 719              	.LCFI15:
 720              		.cfi_def_cfa_offset 8
 721              		@ sp needed
 722 0032 10BD     		pop	{r4, pc}
 723              	.L56:
 724              		.align	2
 725              	.L55:
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 25


 726 0034 00000000 		.word	.LC0
 727 0038 00000000 		.word	.LANCHOR11
 728              		.cfi_endproc
 729              	.LFE143:
 731              		.section	.rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4,"aMS",%progbits,1
 732              		.align	2
 733              	.LC1:
 734 0000 4D657373 		.ascii	"Message Transmitted: M1\012\000"
 734      61676520 
 734      5472616E 
 734      736D6974 
 734      7465643A 
 735              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 736              		.align	1
 737              		.global	HAL_CAN_TxMailbox1CompleteCallback
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 742              	HAL_CAN_TxMailbox1CompleteCallback:
 743              	.LVL47:
 744              	.LFB144:
 179:Core/Src/main.c **** 		char buff[50];
 745              		.loc 1 179 1 is_stmt 1 view -0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 56
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 179:Core/Src/main.c **** 		char buff[50];
 749              		.loc 1 179 1 is_stmt 0 view .LVU146
 750 0000 10B5     		push	{r4, lr}
 751              	.LCFI16:
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 4, -8
 754              		.cfi_offset 14, -4
 755 0002 8EB0     		sub	sp, sp, #56
 756              	.LCFI17:
 757              		.cfi_def_cfa_offset 64
 180:Core/Src/main.c **** 		sprintf(buff, "Message Transmitted: M1\n");
 758              		.loc 1 180 3 is_stmt 1 view .LVU147
 181:Core/Src/main.c **** 		HAL_UART_Transmit(&huart6, (uint8_t *)buff, strlen(buff), HAL_MAX_DELAY);
 759              		.loc 1 181 3 view .LVU148
 760 0004 0DF1040C 		add	ip, sp, #4
 761 0008 0A4C     		ldr	r4, .L59
 762 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 763              	.LVL48:
 181:Core/Src/main.c **** 		HAL_UART_Transmit(&huart6, (uint8_t *)buff, strlen(buff), HAL_MAX_DELAY);
 764              		.loc 1 181 3 is_stmt 0 view .LVU149
 765 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 766 0010 94E80700 		ldm	r4, {r0, r1, r2}
 767 0014 ACE80300 		stmia	ip!, {r0, r1}
 768 0018 8CF80020 		strb	r2, [ip]
 182:Core/Src/main.c **** }
 769              		.loc 1 182 3 is_stmt 1 view .LVU150
 182:Core/Src/main.c **** }
 770              		.loc 1 182 47 is_stmt 0 view .LVU151
 771 001c 01A8     		add	r0, sp, #4
 772 001e FFF7FEFF 		bl	strlen
 773              	.LVL49:
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 26


 182:Core/Src/main.c **** }
 774              		.loc 1 182 3 view .LVU152
 775 0022 4FF0FF33 		mov	r3, #-1
 776 0026 82B2     		uxth	r2, r0
 777 0028 01A9     		add	r1, sp, #4
 778 002a 0348     		ldr	r0, .L59+4
 779 002c FFF7FEFF 		bl	HAL_UART_Transmit
 780              	.LVL50:
 183:Core/Src/main.c **** void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
 781              		.loc 1 183 1 view .LVU153
 782 0030 0EB0     		add	sp, sp, #56
 783              	.LCFI18:
 784              		.cfi_def_cfa_offset 8
 785              		@ sp needed
 786 0032 10BD     		pop	{r4, pc}
 787              	.L60:
 788              		.align	2
 789              	.L59:
 790 0034 00000000 		.word	.LC1
 791 0038 00000000 		.word	.LANCHOR11
 792              		.cfi_endproc
 793              	.LFE144:
 795              		.section	.rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4,"aMS",%progbits,1
 796              		.align	2
 797              	.LC2:
 798 0000 4D657373 		.ascii	"Message Transmitted: M2\012\000"
 798      61676520 
 798      5472616E 
 798      736D6974 
 798      7465643A 
 799              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 800              		.align	1
 801              		.global	HAL_CAN_TxMailbox2CompleteCallback
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 806              	HAL_CAN_TxMailbox2CompleteCallback:
 807              	.LVL51:
 808              	.LFB145:
 185:Core/Src/main.c **** 		char buff[50];
 809              		.loc 1 185 1 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 56
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 185:Core/Src/main.c **** 		char buff[50];
 813              		.loc 1 185 1 is_stmt 0 view .LVU155
 814 0000 10B5     		push	{r4, lr}
 815              	.LCFI19:
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 4, -8
 818              		.cfi_offset 14, -4
 819 0002 8EB0     		sub	sp, sp, #56
 820              	.LCFI20:
 821              		.cfi_def_cfa_offset 64
 186:Core/Src/main.c **** 		sprintf(buff, "Message Transmitted: M2\n");
 822              		.loc 1 186 3 is_stmt 1 view .LVU156
 187:Core/Src/main.c **** 		HAL_UART_Transmit(&huart6, (uint8_t *)buff, strlen(buff), HAL_MAX_DELAY);
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 27


 823              		.loc 1 187 3 view .LVU157
 824 0004 0DF1040C 		add	ip, sp, #4
 825 0008 0A4C     		ldr	r4, .L63
 826 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 827              	.LVL52:
 187:Core/Src/main.c **** 		HAL_UART_Transmit(&huart6, (uint8_t *)buff, strlen(buff), HAL_MAX_DELAY);
 828              		.loc 1 187 3 is_stmt 0 view .LVU158
 829 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 830 0010 94E80700 		ldm	r4, {r0, r1, r2}
 831 0014 ACE80300 		stmia	ip!, {r0, r1}
 832 0018 8CF80020 		strb	r2, [ip]
 188:Core/Src/main.c **** }
 833              		.loc 1 188 3 is_stmt 1 view .LVU159
 188:Core/Src/main.c **** }
 834              		.loc 1 188 47 is_stmt 0 view .LVU160
 835 001c 01A8     		add	r0, sp, #4
 836 001e FFF7FEFF 		bl	strlen
 837              	.LVL53:
 188:Core/Src/main.c **** }
 838              		.loc 1 188 3 view .LVU161
 839 0022 4FF0FF33 		mov	r3, #-1
 840 0026 82B2     		uxth	r2, r0
 841 0028 01A9     		add	r1, sp, #4
 842 002a 0348     		ldr	r0, .L63+4
 843 002c FFF7FEFF 		bl	HAL_UART_Transmit
 844              	.LVL54:
 189:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 845              		.loc 1 189 1 view .LVU162
 846 0030 0EB0     		add	sp, sp, #56
 847              	.LCFI21:
 848              		.cfi_def_cfa_offset 8
 849              		@ sp needed
 850 0032 10BD     		pop	{r4, pc}
 851              	.L64:
 852              		.align	2
 853              	.L63:
 854 0034 00000000 		.word	.LC2
 855 0038 00000000 		.word	.LANCHOR11
 856              		.cfi_endproc
 857              	.LFE145:
 859              		.section	.rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4,"aMS",%progbits,1
 860              		.align	2
 861              	.LC3:
 862 0000 52656365 		.ascii	"Received TPS1=%u, TPS2=%u\015\012\000"
 862      69766564 
 862      20545053 
 862      313D2575 
 862      2C205450 
 863              		.align	2
 864              	.LC4:
 865 001c 43414E3A 		.ascii	"CAN: setpoint=%.2f, Ki=%.2f, Kp=%.2f, Ki=%.2f\015\012"
 865      20736574 
 865      706F696E 
 865      743D252E 
 865      32662C20 
 866 004b 00       		.ascii	"\000"
 867              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 28


 868              		.align	1
 869              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 870              		.syntax unified
 871              		.thumb
 872              		.thumb_func
 874              	HAL_CAN_RxFifo0MsgPendingCallback:
 875              	.LVL55:
 876              	.LFB146:
 190:Core/Src/main.c ****  
 877              		.loc 1 190 65 is_stmt 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 88
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 190:Core/Src/main.c ****  
 881              		.loc 1 190 65 is_stmt 0 view .LVU164
 882 0000 00B5     		push	{lr}
 883              	.LCFI22:
 884              		.cfi_def_cfa_offset 4
 885              		.cfi_offset 14, -4
 886 0002 2DED048B 		vpush.64	{d8, d9}
 887              	.LCFI23:
 888              		.cfi_def_cfa_offset 20
 889              		.cfi_offset 80, -20
 890              		.cfi_offset 81, -16
 891              		.cfi_offset 82, -12
 892              		.cfi_offset 83, -8
 893 0006 9FB0     		sub	sp, sp, #124
 894              	.LCFI24:
 895              		.cfi_def_cfa_offset 144
 192:Core/Src/main.c ****     char msg[80];
 896              		.loc 1 192 5 is_stmt 1 view .LVU165
 193:Core/Src/main.c **** 
 897              		.loc 1 193 5 view .LVU166
 195:Core/Src/main.c ****         if (rx_header.StdId == 0x100) {
 898              		.loc 1 195 5 view .LVU167
 195:Core/Src/main.c ****         if (rx_header.StdId == 0x100) {
 899              		.loc 1 195 9 is_stmt 0 view .LVU168
 900 0008 1DAB     		add	r3, sp, #116
 901 000a 444A     		ldr	r2, .L71
 902 000c 0021     		movs	r1, #0
 903 000e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 904              	.LVL56:
 195:Core/Src/main.c ****         if (rx_header.StdId == 0x100) {
 905              		.loc 1 195 8 view .LVU169
 906 0012 40B9     		cbnz	r0, .L65
 196:Core/Src/main.c ****             TPS1 = (rx_data[1] << 8) | rx_data[0];
 907              		.loc 1 196 9 is_stmt 1 view .LVU170
 196:Core/Src/main.c ****             TPS1 = (rx_data[1] << 8) | rx_data[0];
 908              		.loc 1 196 22 is_stmt 0 view .LVU171
 909 0014 414B     		ldr	r3, .L71
 910 0016 1B68     		ldr	r3, [r3]
 196:Core/Src/main.c ****             TPS1 = (rx_data[1] << 8) | rx_data[0];
 911              		.loc 1 196 12 view .LVU172
 912 0018 B3F5807F 		cmp	r3, #256
 913 001c 08D0     		beq	.L69
 202:Core/Src/main.c ****             setpoint = rx_data[0];
 914              		.loc 1 202 14 is_stmt 1 view .LVU173
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 29


 202:Core/Src/main.c ****             setpoint = rx_data[0];
 915              		.loc 1 202 17 is_stmt 0 view .LVU174
 916 001e 40F20112 		movw	r2, #257
 917 0022 9342     		cmp	r3, r2
 918 0024 1ED0     		beq	.L70
 919              	.L65:
 215:Core/Src/main.c **** 
 920              		.loc 1 215 1 view .LVU175
 921 0026 1FB0     		add	sp, sp, #124
 922              	.LCFI25:
 923              		.cfi_remember_state
 924              		.cfi_def_cfa_offset 20
 925              		@ sp needed
 926 0028 BDEC048B 		vldm	sp!, {d8-d9}
 927              	.LCFI26:
 928              		.cfi_restore 82
 929              		.cfi_restore 83
 930              		.cfi_restore 80
 931              		.cfi_restore 81
 932              		.cfi_def_cfa_offset 4
 933 002c 5DF804FB 		ldr	pc, [sp], #4
 934              	.L69:
 935              	.LCFI27:
 936              		.cfi_restore_state
 197:Core/Src/main.c ****             TPS2 = (rx_data[3] << 8) | rx_data[2];
 937              		.loc 1 197 13 is_stmt 1 view .LVU176
 197:Core/Src/main.c ****             TPS2 = (rx_data[3] << 8) | rx_data[2];
 938              		.loc 1 197 28 is_stmt 0 view .LVU177
 939 0030 9DF87520 		ldrb	r2, [sp, #117]	@ zero_extendqisi2
 197:Core/Src/main.c ****             TPS2 = (rx_data[3] << 8) | rx_data[2];
 940              		.loc 1 197 47 view .LVU178
 941 0034 9DF87430 		ldrb	r3, [sp, #116]	@ zero_extendqisi2
 197:Core/Src/main.c ****             TPS2 = (rx_data[3] << 8) | rx_data[2];
 942              		.loc 1 197 38 view .LVU179
 943 0038 43EA0223 		orr	r3, r3, r2, lsl #8
 197:Core/Src/main.c ****             TPS2 = (rx_data[3] << 8) | rx_data[2];
 944              		.loc 1 197 18 view .LVU180
 945 003c 384A     		ldr	r2, .L71+4
 946 003e 1380     		strh	r3, [r2]	@ movhi
 198:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "Received TPS1=%u, TPS2=%u\r\n", TPS1, TPS2);
 947              		.loc 1 198 13 is_stmt 1 view .LVU181
 198:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "Received TPS1=%u, TPS2=%u\r\n", TPS1, TPS2);
 948              		.loc 1 198 28 is_stmt 0 view .LVU182
 949 0040 9DF87710 		ldrb	r1, [sp, #119]	@ zero_extendqisi2
 198:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "Received TPS1=%u, TPS2=%u\r\n", TPS1, TPS2);
 950              		.loc 1 198 47 view .LVU183
 951 0044 9DF87620 		ldrb	r2, [sp, #118]	@ zero_extendqisi2
 198:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "Received TPS1=%u, TPS2=%u\r\n", TPS1, TPS2);
 952              		.loc 1 198 38 view .LVU184
 953 0048 42EA0122 		orr	r2, r2, r1, lsl #8
 198:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "Received TPS1=%u, TPS2=%u\r\n", TPS1, TPS2);
 954              		.loc 1 198 18 view .LVU185
 955 004c 3549     		ldr	r1, .L71+8
 956 004e 0A80     		strh	r2, [r1]	@ movhi
 199:Core/Src/main.c ****             debug_print(msg);
 957              		.loc 1 199 13 is_stmt 1 view .LVU186
 958 0050 0092     		str	r2, [sp]
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 30


 959 0052 354A     		ldr	r2, .L71+12
 960 0054 5021     		movs	r1, #80
 961 0056 09A8     		add	r0, sp, #36
 962 0058 FFF7FEFF 		bl	snprintf
 963              	.LVL57:
 200:Core/Src/main.c ****         }
 964              		.loc 1 200 13 view .LVU187
 965 005c 09A8     		add	r0, sp, #36
 966 005e FFF7FEFF 		bl	debug_print
 967              	.LVL58:
 968 0062 E0E7     		b	.L65
 969              	.L70:
 203:Core/Src/main.c ****             Ki = rx_data[1];
 970              		.loc 1 203 13 view .LVU188
 203:Core/Src/main.c ****             Ki = rx_data[1];
 971              		.loc 1 203 31 is_stmt 0 view .LVU189
 972 0064 9DF87430 		ldrb	r3, [sp, #116]	@ zero_extendqisi2
 973 0068 09EE103A 		vmov	s18, r3	@ int
 203:Core/Src/main.c ****             Ki = rx_data[1];
 974              		.loc 1 203 22 view .LVU190
 975 006c B8EE499A 		vcvt.f32.u32	s18, s18
 976 0070 2E4B     		ldr	r3, .L71+16
 977 0072 83ED009A 		vstr.32	s18, [r3]
 204:Core/Src/main.c ****             Kp = rx_data[2];
 978              		.loc 1 204 13 is_stmt 1 view .LVU191
 204:Core/Src/main.c ****             Kp = rx_data[2];
 979              		.loc 1 204 25 is_stmt 0 view .LVU192
 980 0076 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 981 007a 07EE103A 		vmov	s14, r3	@ int
 204:Core/Src/main.c ****             Kp = rx_data[2];
 982              		.loc 1 204 16 view .LVU193
 983 007e B8EE477A 		vcvt.f32.u32	s14, s14
 984 0082 2B49     		ldr	r1, .L71+20
 985 0084 81ED007A 		vstr.32	s14, [r1]
 205:Core/Src/main.c ****             Kd = rx_data [3];
 986              		.loc 1 205 13 is_stmt 1 view .LVU194
 205:Core/Src/main.c ****             Kd = rx_data [3];
 987              		.loc 1 205 25 is_stmt 0 view .LVU195
 988 0088 9DF87630 		ldrb	r3, [sp, #118]	@ zero_extendqisi2
 989 008c 08EE903A 		vmov	s17, r3	@ int
 205:Core/Src/main.c ****             Kd = rx_data [3];
 990              		.loc 1 205 16 view .LVU196
 991 0090 F8EE688A 		vcvt.f32.u32	s17, s17
 992 0094 274A     		ldr	r2, .L71+24
 993 0096 C2ED008A 		vstr.32	s17, [r2]
 206:Core/Src/main.c **** 
 994              		.loc 1 206 13 is_stmt 1 view .LVU197
 206:Core/Src/main.c **** 
 995              		.loc 1 206 26 is_stmt 0 view .LVU198
 996 009a 9DF87730 		ldrb	r3, [sp, #119]	@ zero_extendqisi2
 997 009e 07EE903A 		vmov	s15, r3	@ int
 206:Core/Src/main.c **** 
 998              		.loc 1 206 16 view .LVU199
 999 00a2 F8EE677A 		vcvt.f32.u32	s15, s15
 1000 00a6 244B     		ldr	r3, .L71+28
 1001 00a8 C3ED007A 		vstr.32	s15, [r3]
 208:Core/Src/main.c ****             Kp = Kp*10/256;
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 31


 1002              		.loc 1 208 13 is_stmt 1 view .LVU200
 208:Core/Src/main.c ****             Kp = Kp*10/256;
 1003              		.loc 1 208 20 is_stmt 0 view .LVU201
 1004 00ac F2EE046A 		vmov.f32	s13, #1.0e+1
 1005 00b0 27EE267A 		vmul.f32	s14, s14, s13
 208:Core/Src/main.c ****             Kp = Kp*10/256;
 1006              		.loc 1 208 23 view .LVU202
 1007 00b4 9FED218A 		vldr.32	s16, .L71+32
 1008 00b8 27EE087A 		vmul.f32	s14, s14, s16
 208:Core/Src/main.c ****             Kp = Kp*10/256;
 1009              		.loc 1 208 16 view .LVU203
 1010 00bc 81ED007A 		vstr.32	s14, [r1]
 209:Core/Src/main.c ****             Kd = Kd*10/256;
 1011              		.loc 1 209 13 is_stmt 1 view .LVU204
 209:Core/Src/main.c ****             Kd = Kd*10/256;
 1012              		.loc 1 209 20 is_stmt 0 view .LVU205
 1013 00c0 68EEA68A 		vmul.f32	s17, s17, s13
 209:Core/Src/main.c ****             Kd = Kd*10/256;
 1014              		.loc 1 209 23 view .LVU206
 1015 00c4 68EE888A 		vmul.f32	s17, s17, s16
 209:Core/Src/main.c ****             Kd = Kd*10/256;
 1016              		.loc 1 209 16 view .LVU207
 1017 00c8 C2ED008A 		vstr.32	s17, [r2]
 210:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "CAN: setpoint=%.2f, Ki=%.2f, Kp=%.2f, Ki=%.2f\r\n", setpoin
 1018              		.loc 1 210 13 is_stmt 1 view .LVU208
 210:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "CAN: setpoint=%.2f, Ki=%.2f, Kp=%.2f, Ki=%.2f\r\n", setpoin
 1019              		.loc 1 210 20 is_stmt 0 view .LVU209
 1020 00cc 67EEA67A 		vmul.f32	s15, s15, s13
 210:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "CAN: setpoint=%.2f, Ki=%.2f, Kp=%.2f, Ki=%.2f\r\n", setpoin
 1021              		.loc 1 210 23 view .LVU210
 1022 00d0 27EE888A 		vmul.f32	s16, s15, s16
 210:Core/Src/main.c ****             snprintf(msg, sizeof(msg), "CAN: setpoint=%.2f, Ki=%.2f, Kp=%.2f, Ki=%.2f\r\n", setpoin
 1023              		.loc 1 210 16 view .LVU211
 1024 00d4 83ED008A 		vstr.32	s16, [r3]
 211:Core/Src/main.c ****             debug_print(msg);
 1025              		.loc 1 211 13 is_stmt 1 view .LVU212
 1026 00d8 17EE100A 		vmov	r0, s14
 1027 00dc FFF7FEFF 		bl	__aeabi_f2d
 1028              	.LVL59:
 1029 00e0 CDE90601 		strd	r0, [sp, #24]
 1030 00e4 18EE900A 		vmov	r0, s17
 1031 00e8 FFF7FEFF 		bl	__aeabi_f2d
 1032              	.LVL60:
 1033 00ec CDE90401 		strd	r0, [sp, #16]
 1034 00f0 18EE100A 		vmov	r0, s16
 1035 00f4 FFF7FEFF 		bl	__aeabi_f2d
 1036              	.LVL61:
 1037 00f8 CDE90201 		strd	r0, [sp, #8]
 1038 00fc 19EE100A 		vmov	r0, s18
 1039 0100 FFF7FEFF 		bl	__aeabi_f2d
 1040              	.LVL62:
 1041 0104 CDE90001 		strd	r0, [sp]
 1042 0108 0D4A     		ldr	r2, .L71+36
 1043 010a 5021     		movs	r1, #80
 1044 010c 09A8     		add	r0, sp, #36
 1045 010e FFF7FEFF 		bl	snprintf
 1046              	.LVL63:
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 32


 212:Core/Src/main.c ****         }
 1047              		.loc 1 212 13 view .LVU213
 1048 0112 09A8     		add	r0, sp, #36
 1049 0114 FFF7FEFF 		bl	debug_print
 1050              	.LVL64:
 215:Core/Src/main.c **** 
 1051              		.loc 1 215 1 is_stmt 0 view .LVU214
 1052 0118 85E7     		b	.L65
 1053              	.L72:
 1054 011a 00BF     		.align	2
 1055              	.L71:
 1056 011c 00000000 		.word	.LANCHOR12
 1057 0120 00000000 		.word	.LANCHOR13
 1058 0124 00000000 		.word	.LANCHOR14
 1059 0128 00000000 		.word	.LC3
 1060 012c 00000000 		.word	.LANCHOR0
 1061 0130 00000000 		.word	.LANCHOR7
 1062 0134 00000000 		.word	.LANCHOR6
 1063 0138 00000000 		.word	.LANCHOR8
 1064 013c 0000803B 		.word	998244352
 1065 0140 1C000000 		.word	.LC4
 1066              		.cfi_endproc
 1067              	.LFE146:
 1069              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1070              		.align	1
 1071              		.global	HAL_TIM_PeriodElapsedCallback
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1076              	HAL_TIM_PeriodElapsedCallback:
 1077              	.LVL65:
 1078              	.LFB147:
 218:Core/Src/main.c ****   timer_run();
 1079              		.loc 1 218 61 is_stmt 1 view -0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 218:Core/Src/main.c ****   timer_run();
 1083              		.loc 1 218 61 is_stmt 0 view .LVU216
 1084 0000 08B5     		push	{r3, lr}
 1085              	.LCFI28:
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 3, -8
 1088              		.cfi_offset 14, -4
 219:Core/Src/main.c **** }
 1089              		.loc 1 219 3 is_stmt 1 view .LVU217
 1090 0002 FFF7FEFF 		bl	timer_run
 1091              	.LVL66:
 220:Core/Src/main.c **** 
 1092              		.loc 1 220 1 is_stmt 0 view .LVU218
 1093 0006 08BD     		pop	{r3, pc}
 1094              		.cfi_endproc
 1095              	.LFE147:
 1097              		.section	.text.Error_Handler,"ax",%progbits
 1098              		.align	1
 1099              		.global	Error_Handler
 1100              		.syntax unified
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 33


 1101              		.thumb
 1102              		.thumb_func
 1104              	Error_Handler:
 1105              	.LFB155:
 552:Core/Src/main.c **** 
 553:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 554:Core/Src/main.c **** 
 555:Core/Src/main.c **** /* USER CODE END 4 */
 556:Core/Src/main.c **** 
 557:Core/Src/main.c **** /**
 558:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 559:Core/Src/main.c ****   * @retval None
 560:Core/Src/main.c ****   */
 561:Core/Src/main.c **** void Error_Handler(void)
 562:Core/Src/main.c **** {
 1106              		.loc 1 562 1 is_stmt 1 view -0
 1107              		.cfi_startproc
 1108              		@ Volatile: function does not return.
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111              		@ link register save eliminated.
 563:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 564:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 565:Core/Src/main.c ****   __disable_irq();
 1112              		.loc 1 565 3 view .LVU220
 1113              	.LBB9:
 1114              	.LBI9:
 1115              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 34


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 35


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 36


 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 37


 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 38


 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 39


 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 40


 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 41


 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 42


 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 43


 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 44


 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 45


 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 46


 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 47


 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 48


 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 49


 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 50


 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1116              		.loc 2 960 27 view .LVU221
 1117              	.LBB10:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1118              		.loc 2 962 3 view .LVU222
 1119              		.syntax unified
 1120              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1121 0000 72B6     		cpsid i
 1122              	@ 0 "" 2
 1123              		.thumb
 1124              		.syntax unified
 1125              	.L76:
 1126              	.LBE10:
 1127              	.LBE9:
 566:Core/Src/main.c ****   while (1)
 1128              		.loc 1 566 3 discriminator 1 view .LVU223
 567:Core/Src/main.c ****   {
 568:Core/Src/main.c ****   }
 1129              		.loc 1 568 3 discriminator 1 view .LVU224
 566:Core/Src/main.c ****   while (1)
 1130              		.loc 1 566 9 discriminator 1 view .LVU225
 1131 0002 FEE7     		b	.L76
 1132              		.cfi_endproc
 1133              	.LFE155:
 1135              		.section	.rodata.CAN_Filter_Config.str1.4,"aMS",%progbits,1
 1136              		.align	2
 1137              	.LC5:
 1138 0000 43414E20 		.ascii	"CAN Filter Config Failed (Bank 1)\015\012\000"
 1138      46696C74 
 1138      65722043 
 1138      6F6E6669 
 1138      67204661 
 1139              		.section	.text.CAN_Filter_Config,"ax",%progbits
 1140              		.align	1
 1141              		.global	CAN_Filter_Config
 1142              		.syntax unified
 1143              		.thumb
 1144              		.thumb_func
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 51


 1146              	CAN_Filter_Config:
 1147              	.LFB142:
 139:Core/Src/main.c **** 	CAN_FilterTypeDef filter;
 1148              		.loc 1 139 30 view -0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 40
 1151              		@ frame_needed = 0, uses_anonymous_args = 0
 1152 0000 70B5     		push	{r4, r5, r6, lr}
 1153              	.LCFI29:
 1154              		.cfi_def_cfa_offset 16
 1155              		.cfi_offset 4, -16
 1156              		.cfi_offset 5, -12
 1157              		.cfi_offset 6, -8
 1158              		.cfi_offset 14, -4
 1159 0002 8AB0     		sub	sp, sp, #40
 1160              	.LCFI30:
 1161              		.cfi_def_cfa_offset 56
 140:Core/Src/main.c **** 	filter.FilterActivation = ENABLE;
 1162              		.loc 1 140 2 view .LVU227
 141:Core/Src/main.c **** 	filter.FilterBank = 0;
 1163              		.loc 1 141 2 view .LVU228
 141:Core/Src/main.c **** 	filter.FilterBank = 0;
 1164              		.loc 1 141 26 is_stmt 0 view .LVU229
 1165 0004 0125     		movs	r5, #1
 1166 0006 0895     		str	r5, [sp, #32]
 142:Core/Src/main.c **** 	filter.FilterFIFOAssignment = CAN_RX_FIFO0;
 1167              		.loc 1 142 2 is_stmt 1 view .LVU230
 142:Core/Src/main.c **** 	filter.FilterFIFOAssignment = CAN_RX_FIFO0;
 1168              		.loc 1 142 20 is_stmt 0 view .LVU231
 1169 0008 0024     		movs	r4, #0
 1170 000a 0594     		str	r4, [sp, #20]
 143:Core/Src/main.c **** 	filter.FilterIdHigh = 0x100<<5;
 1171              		.loc 1 143 2 is_stmt 1 view .LVU232
 143:Core/Src/main.c **** 	filter.FilterIdHigh = 0x100<<5;
 1172              		.loc 1 143 30 is_stmt 0 view .LVU233
 1173 000c 0494     		str	r4, [sp, #16]
 144:Core/Src/main.c **** 	filter.FilterIdLow = 0x0000;
 1174              		.loc 1 144 2 is_stmt 1 view .LVU234
 144:Core/Src/main.c **** 	filter.FilterIdLow = 0x0000;
 1175              		.loc 1 144 22 is_stmt 0 view .LVU235
 1176 000e 4FF40053 		mov	r3, #8192
 1177 0012 0093     		str	r3, [sp]
 145:Core/Src/main.c **** 	filter.FilterMaskIdHigh = 0x100<<5;
 1178              		.loc 1 145 2 is_stmt 1 view .LVU236
 145:Core/Src/main.c **** 	filter.FilterMaskIdHigh = 0x100<<5;
 1179              		.loc 1 145 21 is_stmt 0 view .LVU237
 1180 0014 0194     		str	r4, [sp, #4]
 146:Core/Src/main.c **** 	filter.FilterMaskIdLow = 0x0000;
 1181              		.loc 1 146 2 is_stmt 1 view .LVU238
 146:Core/Src/main.c **** 	filter.FilterMaskIdLow = 0x0000;
 1182              		.loc 1 146 26 is_stmt 0 view .LVU239
 1183 0016 0293     		str	r3, [sp, #8]
 147:Core/Src/main.c **** 	filter.FilterMode = CAN_FILTERMODE_IDMASK;
 1184              		.loc 1 147 2 is_stmt 1 view .LVU240
 147:Core/Src/main.c **** 	filter.FilterMode = CAN_FILTERMODE_IDMASK;
 1185              		.loc 1 147 25 is_stmt 0 view .LVU241
 1186 0018 0394     		str	r4, [sp, #12]
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 52


 148:Core/Src/main.c **** 	filter.FilterScale = CAN_FILTERSCALE_32BIT;
 1187              		.loc 1 148 2 is_stmt 1 view .LVU242
 148:Core/Src/main.c **** 	filter.FilterScale = CAN_FILTERSCALE_32BIT;
 1188              		.loc 1 148 20 is_stmt 0 view .LVU243
 1189 001a 0694     		str	r4, [sp, #24]
 149:Core/Src/main.c **** 	
 1190              		.loc 1 149 2 is_stmt 1 view .LVU244
 149:Core/Src/main.c **** 	
 1191              		.loc 1 149 21 is_stmt 0 view .LVU245
 1192 001c 0795     		str	r5, [sp, #28]
 151:Core/Src/main.c **** 	
 1193              		.loc 1 151 2 is_stmt 1 view .LVU246
 1194 001e 0E4E     		ldr	r6, .L81
 1195 0020 6946     		mov	r1, sp
 1196 0022 3046     		mov	r0, r6
 1197 0024 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 1198              	.LVL67:
 154:Core/Src/main.c ****     filter.FilterMode = CAN_FILTERMODE_IDLIST;   // Chế độ danh sách ID
 1199              		.loc 1 154 5 view .LVU247
 154:Core/Src/main.c ****     filter.FilterMode = CAN_FILTERMODE_IDLIST;   // Chế độ danh sách ID
 1200              		.loc 1 154 23 is_stmt 0 view .LVU248
 1201 0028 0595     		str	r5, [sp, #20]
 155:Core/Src/main.c ****     filter.FilterScale = CAN_FILTERSCALE_32BIT;  // Quy mô bộ l�?c 32-bit
 1202              		.loc 1 155 5 is_stmt 1 view .LVU249
 155:Core/Src/main.c ****     filter.FilterScale = CAN_FILTERSCALE_32BIT;  // Quy mô bộ l�?c 32-bit
 1203              		.loc 1 155 23 is_stmt 0 view .LVU250
 1204 002a 0695     		str	r5, [sp, #24]
 156:Core/Src/main.c ****     filter.FilterIdHigh = 0x101 << 5;           // ID 0x123 (dịch trái 5 bit)
 1205              		.loc 1 156 5 is_stmt 1 view .LVU251
 156:Core/Src/main.c ****     filter.FilterIdHigh = 0x101 << 5;           // ID 0x123 (dịch trái 5 bit)
 1206              		.loc 1 156 24 is_stmt 0 view .LVU252
 1207 002c 0795     		str	r5, [sp, #28]
 157:Core/Src/main.c ****     filter.FilterIdLow = 0;                     // Không sử dụng ID thứ hai
 1208              		.loc 1 157 5 is_stmt 1 view .LVU253
 157:Core/Src/main.c ****     filter.FilterIdLow = 0;                     // Không sử dụng ID thứ hai
 1209              		.loc 1 157 25 is_stmt 0 view .LVU254
 1210 002e 42F22003 		movw	r3, #8224
 1211 0032 0093     		str	r3, [sp]
 158:Core/Src/main.c ****     filter.FilterMaskIdHigh = 0x101<<5;                // Không dùng mặt nạ
 1212              		.loc 1 158 5 is_stmt 1 view .LVU255
 158:Core/Src/main.c ****     filter.FilterMaskIdHigh = 0x101<<5;                // Không dùng mặt nạ
 1213              		.loc 1 158 24 is_stmt 0 view .LVU256
 1214 0034 0194     		str	r4, [sp, #4]
 159:Core/Src/main.c ****     filter.FilterMaskIdLow = 0;                 // Không dùng mặt nạ
 1215              		.loc 1 159 5 is_stmt 1 view .LVU257
 159:Core/Src/main.c ****     filter.FilterMaskIdLow = 0;                 // Không dùng mặt nạ
 1216              		.loc 1 159 29 is_stmt 0 view .LVU258
 1217 0036 0293     		str	r3, [sp, #8]
 160:Core/Src/main.c ****     filter.FilterFIFOAssignment = CAN_RX_FIFO0; // Gán vào FIFO0
 1218              		.loc 1 160 5 is_stmt 1 view .LVU259
 160:Core/Src/main.c ****     filter.FilterFIFOAssignment = CAN_RX_FIFO0; // Gán vào FIFO0
 1219              		.loc 1 160 28 is_stmt 0 view .LVU260
 1220 0038 0394     		str	r4, [sp, #12]
 161:Core/Src/main.c ****     filter.FilterActivation = ENABLE;           // Kích hoạt bộ l�?c
 1221              		.loc 1 161 5 is_stmt 1 view .LVU261
 161:Core/Src/main.c ****     filter.FilterActivation = ENABLE;           // Kích hoạt bộ l�?c
 1222              		.loc 1 161 33 is_stmt 0 view .LVU262
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 53


 1223 003a 0494     		str	r4, [sp, #16]
 162:Core/Src/main.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &filter) != HAL_OK) {
 1224              		.loc 1 162 5 is_stmt 1 view .LVU263
 162:Core/Src/main.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &filter) != HAL_OK) {
 1225              		.loc 1 162 29 is_stmt 0 view .LVU264
 1226 003c 0895     		str	r5, [sp, #32]
 163:Core/Src/main.c ****         debug_print("CAN Filter Config Failed (Bank 1)\r\n");
 1227              		.loc 1 163 5 is_stmt 1 view .LVU265
 163:Core/Src/main.c ****         debug_print("CAN Filter Config Failed (Bank 1)\r\n");
 1228              		.loc 1 163 9 is_stmt 0 view .LVU266
 1229 003e 6946     		mov	r1, sp
 1230 0040 3046     		mov	r0, r6
 1231 0042 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 1232              	.LVL68:
 163:Core/Src/main.c ****         debug_print("CAN Filter Config Failed (Bank 1)\r\n");
 1233              		.loc 1 163 8 view .LVU267
 1234 0046 08B9     		cbnz	r0, .L80
 168:Core/Src/main.c **** 
 1235              		.loc 1 168 1 view .LVU268
 1236 0048 0AB0     		add	sp, sp, #40
 1237              	.LCFI31:
 1238              		.cfi_remember_state
 1239              		.cfi_def_cfa_offset 16
 1240              		@ sp needed
 1241 004a 70BD     		pop	{r4, r5, r6, pc}
 1242              	.L80:
 1243              	.LCFI32:
 1244              		.cfi_restore_state
 164:Core/Src/main.c ****         Error_Handler();
 1245              		.loc 1 164 9 is_stmt 1 view .LVU269
 1246 004c 0348     		ldr	r0, .L81+4
 1247 004e FFF7FEFF 		bl	debug_print
 1248              	.LVL69:
 165:Core/Src/main.c ****     }
 1249              		.loc 1 165 9 view .LVU270
 1250 0052 FFF7FEFF 		bl	Error_Handler
 1251              	.LVL70:
 1252              	.L82:
 1253 0056 00BF     		.align	2
 1254              	.L81:
 1255 0058 00000000 		.word	.LANCHOR15
 1256 005c 00000000 		.word	.LC5
 1257              		.cfi_endproc
 1258              	.LFE142:
 1260              		.section	.text.MX_CAN1_Init,"ax",%progbits
 1261              		.align	1
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1266              	MX_CAN1_Init:
 1267              	.LFB150:
 347:Core/Src/main.c **** 
 1268              		.loc 1 347 1 view -0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 54


 1273              	.LCFI33:
 1274              		.cfi_def_cfa_offset 8
 1275              		.cfi_offset 3, -8
 1276              		.cfi_offset 14, -4
 356:Core/Src/main.c ****   hcan1.Init.Prescaler = 8;
 1277              		.loc 1 356 3 view .LVU272
 356:Core/Src/main.c ****   hcan1.Init.Prescaler = 8;
 1278              		.loc 1 356 18 is_stmt 0 view .LVU273
 1279 0002 0C48     		ldr	r0, .L87
 1280 0004 0C4B     		ldr	r3, .L87+4
 1281 0006 0360     		str	r3, [r0]
 357:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1282              		.loc 1 357 3 is_stmt 1 view .LVU274
 357:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1283              		.loc 1 357 24 is_stmt 0 view .LVU275
 1284 0008 0823     		movs	r3, #8
 1285 000a 4360     		str	r3, [r0, #4]
 358:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1286              		.loc 1 358 3 is_stmt 1 view .LVU276
 358:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1287              		.loc 1 358 19 is_stmt 0 view .LVU277
 1288 000c 0023     		movs	r3, #0
 1289 000e 8360     		str	r3, [r0, #8]
 359:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_6TQ;
 1290              		.loc 1 359 3 is_stmt 1 view .LVU278
 359:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_6TQ;
 1291              		.loc 1 359 28 is_stmt 0 view .LVU279
 1292 0010 C360     		str	r3, [r0, #12]
 360:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 1293              		.loc 1 360 3 is_stmt 1 view .LVU280
 360:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 1294              		.loc 1 360 23 is_stmt 0 view .LVU281
 1295 0012 4FF4A022 		mov	r2, #327680
 1296 0016 0261     		str	r2, [r0, #16]
 361:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1297              		.loc 1 361 3 is_stmt 1 view .LVU282
 361:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1298              		.loc 1 361 23 is_stmt 0 view .LVU283
 1299 0018 4361     		str	r3, [r0, #20]
 362:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 1300              		.loc 1 362 3 is_stmt 1 view .LVU284
 362:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 1301              		.loc 1 362 32 is_stmt 0 view .LVU285
 1302 001a 0376     		strb	r3, [r0, #24]
 363:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 1303              		.loc 1 363 3 is_stmt 1 view .LVU286
 363:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 1304              		.loc 1 363 25 is_stmt 0 view .LVU287
 1305 001c 0122     		movs	r2, #1
 1306 001e 4276     		strb	r2, [r0, #25]
 364:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 1307              		.loc 1 364 3 is_stmt 1 view .LVU288
 364:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 1308              		.loc 1 364 25 is_stmt 0 view .LVU289
 1309 0020 8376     		strb	r3, [r0, #26]
 365:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1310              		.loc 1 365 3 is_stmt 1 view .LVU290
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 55


 365:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1311              		.loc 1 365 33 is_stmt 0 view .LVU291
 1312 0022 C276     		strb	r2, [r0, #27]
 366:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1313              		.loc 1 366 3 is_stmt 1 view .LVU292
 366:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1314              		.loc 1 366 32 is_stmt 0 view .LVU293
 1315 0024 0377     		strb	r3, [r0, #28]
 367:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1316              		.loc 1 367 3 is_stmt 1 view .LVU294
 367:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1317              		.loc 1 367 35 is_stmt 0 view .LVU295
 1318 0026 4377     		strb	r3, [r0, #29]
 368:Core/Src/main.c ****   {
 1319              		.loc 1 368 3 is_stmt 1 view .LVU296
 368:Core/Src/main.c ****   {
 1320              		.loc 1 368 7 is_stmt 0 view .LVU297
 1321 0028 FFF7FEFF 		bl	HAL_CAN_Init
 1322              	.LVL71:
 368:Core/Src/main.c ****   {
 1323              		.loc 1 368 6 view .LVU298
 1324 002c 00B9     		cbnz	r0, .L86
 376:Core/Src/main.c **** 
 1325              		.loc 1 376 1 view .LVU299
 1326 002e 08BD     		pop	{r3, pc}
 1327              	.L86:
 370:Core/Src/main.c ****   }
 1328              		.loc 1 370 5 is_stmt 1 view .LVU300
 1329 0030 FFF7FEFF 		bl	Error_Handler
 1330              	.LVL72:
 1331              	.L88:
 1332              		.align	2
 1333              	.L87:
 1334 0034 00000000 		.word	.LANCHOR15
 1335 0038 00640040 		.word	1073767424
 1336              		.cfi_endproc
 1337              	.LFE150:
 1339              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1340              		.align	1
 1341              		.syntax unified
 1342              		.thumb
 1343              		.thumb_func
 1345              	MX_TIM1_Init:
 1346              	.LFB151:
 384:Core/Src/main.c **** 
 1347              		.loc 1 384 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 72
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351 0000 10B5     		push	{r4, lr}
 1352              	.LCFI34:
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 4, -8
 1355              		.cfi_offset 14, -4
 1356 0002 92B0     		sub	sp, sp, #72
 1357              	.LCFI35:
 1358              		.cfi_def_cfa_offset 80
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 56


 390:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1359              		.loc 1 390 3 view .LVU302
 390:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1360              		.loc 1 390 27 is_stmt 0 view .LVU303
 1361 0004 0024     		movs	r4, #0
 1362 0006 1094     		str	r4, [sp, #64]
 1363 0008 1194     		str	r4, [sp, #68]
 391:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1364              		.loc 1 391 3 is_stmt 1 view .LVU304
 391:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1365              		.loc 1 391 22 is_stmt 0 view .LVU305
 1366 000a 0994     		str	r4, [sp, #36]
 1367 000c 0A94     		str	r4, [sp, #40]
 1368 000e 0B94     		str	r4, [sp, #44]
 1369 0010 0C94     		str	r4, [sp, #48]
 1370 0012 0D94     		str	r4, [sp, #52]
 1371 0014 0E94     		str	r4, [sp, #56]
 1372 0016 0F94     		str	r4, [sp, #60]
 392:Core/Src/main.c **** 
 1373              		.loc 1 392 3 is_stmt 1 view .LVU306
 392:Core/Src/main.c **** 
 1374              		.loc 1 392 34 is_stmt 0 view .LVU307
 1375 0018 2022     		movs	r2, #32
 1376 001a 2146     		mov	r1, r4
 1377 001c 01A8     		add	r0, sp, #4
 1378 001e FFF7FEFF 		bl	memset
 1379              	.LVL73:
 397:Core/Src/main.c ****   htim1.Init.Prescaler = 63;
 1380              		.loc 1 397 3 is_stmt 1 view .LVU308
 397:Core/Src/main.c ****   htim1.Init.Prescaler = 63;
 1381              		.loc 1 397 18 is_stmt 0 view .LVU309
 1382 0022 2148     		ldr	r0, .L99
 1383 0024 214B     		ldr	r3, .L99+4
 1384 0026 0360     		str	r3, [r0]
 398:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1385              		.loc 1 398 3 is_stmt 1 view .LVU310
 398:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1386              		.loc 1 398 24 is_stmt 0 view .LVU311
 1387 0028 3F23     		movs	r3, #63
 1388 002a 4360     		str	r3, [r0, #4]
 399:Core/Src/main.c ****   htim1.Init.Period = 999;
 1389              		.loc 1 399 3 is_stmt 1 view .LVU312
 399:Core/Src/main.c ****   htim1.Init.Period = 999;
 1390              		.loc 1 399 26 is_stmt 0 view .LVU313
 1391 002c 8460     		str	r4, [r0, #8]
 400:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1392              		.loc 1 400 3 is_stmt 1 view .LVU314
 400:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1393              		.loc 1 400 21 is_stmt 0 view .LVU315
 1394 002e 40F2E733 		movw	r3, #999
 1395 0032 C360     		str	r3, [r0, #12]
 401:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1396              		.loc 1 401 3 is_stmt 1 view .LVU316
 401:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1397              		.loc 1 401 28 is_stmt 0 view .LVU317
 1398 0034 0461     		str	r4, [r0, #16]
 402:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 57


 1399              		.loc 1 402 3 is_stmt 1 view .LVU318
 402:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1400              		.loc 1 402 32 is_stmt 0 view .LVU319
 1401 0036 4461     		str	r4, [r0, #20]
 403:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 1402              		.loc 1 403 3 is_stmt 1 view .LVU320
 403:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 1403              		.loc 1 403 32 is_stmt 0 view .LVU321
 1404 0038 8461     		str	r4, [r0, #24]
 404:Core/Src/main.c ****   {
 1405              		.loc 1 404 3 is_stmt 1 view .LVU322
 404:Core/Src/main.c ****   {
 1406              		.loc 1 404 7 is_stmt 0 view .LVU323
 1407 003a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1408              	.LVL74:
 404:Core/Src/main.c ****   {
 1409              		.loc 1 404 6 view .LVU324
 1410 003e 0028     		cmp	r0, #0
 1411 0040 29D1     		bne	.L95
 408:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1412              		.loc 1 408 3 is_stmt 1 view .LVU325
 408:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1413              		.loc 1 408 37 is_stmt 0 view .LVU326
 1414 0042 0023     		movs	r3, #0
 1415 0044 1093     		str	r3, [sp, #64]
 409:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1416              		.loc 1 409 3 is_stmt 1 view .LVU327
 409:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1417              		.loc 1 409 33 is_stmt 0 view .LVU328
 1418 0046 1193     		str	r3, [sp, #68]
 410:Core/Src/main.c ****   {
 1419              		.loc 1 410 3 is_stmt 1 view .LVU329
 410:Core/Src/main.c ****   {
 1420              		.loc 1 410 7 is_stmt 0 view .LVU330
 1421 0048 10A9     		add	r1, sp, #64
 1422 004a 1748     		ldr	r0, .L99
 1423 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1424              	.LVL75:
 410:Core/Src/main.c ****   {
 1425              		.loc 1 410 6 view .LVU331
 1426 0050 18BB     		cbnz	r0, .L96
 414:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1427              		.loc 1 414 3 is_stmt 1 view .LVU332
 414:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1428              		.loc 1 414 20 is_stmt 0 view .LVU333
 1429 0052 6023     		movs	r3, #96
 1430 0054 0993     		str	r3, [sp, #36]
 415:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1431              		.loc 1 415 3 is_stmt 1 view .LVU334
 415:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1432              		.loc 1 415 19 is_stmt 0 view .LVU335
 1433 0056 0022     		movs	r2, #0
 1434 0058 0A92     		str	r2, [sp, #40]
 416:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1435              		.loc 1 416 3 is_stmt 1 view .LVU336
 416:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1436              		.loc 1 416 24 is_stmt 0 view .LVU337
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 58


 1437 005a 0B92     		str	r2, [sp, #44]
 417:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1438              		.loc 1 417 3 is_stmt 1 view .LVU338
 417:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1439              		.loc 1 417 25 is_stmt 0 view .LVU339
 1440 005c 0C92     		str	r2, [sp, #48]
 418:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1441              		.loc 1 418 3 is_stmt 1 view .LVU340
 418:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1442              		.loc 1 418 24 is_stmt 0 view .LVU341
 1443 005e 0D92     		str	r2, [sp, #52]
 419:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1444              		.loc 1 419 3 is_stmt 1 view .LVU342
 419:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1445              		.loc 1 419 25 is_stmt 0 view .LVU343
 1446 0060 0E92     		str	r2, [sp, #56]
 420:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1447              		.loc 1 420 3 is_stmt 1 view .LVU344
 420:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1448              		.loc 1 420 26 is_stmt 0 view .LVU345
 1449 0062 0F92     		str	r2, [sp, #60]
 421:Core/Src/main.c ****   {
 1450              		.loc 1 421 3 is_stmt 1 view .LVU346
 421:Core/Src/main.c ****   {
 1451              		.loc 1 421 7 is_stmt 0 view .LVU347
 1452 0064 09A9     		add	r1, sp, #36
 1453 0066 1048     		ldr	r0, .L99
 1454 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1455              	.LVL76:
 421:Core/Src/main.c ****   {
 1456              		.loc 1 421 6 view .LVU348
 1457 006c B8B9     		cbnz	r0, .L97
 425:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1458              		.loc 1 425 3 is_stmt 1 view .LVU349
 425:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1459              		.loc 1 425 40 is_stmt 0 view .LVU350
 1460 006e 0023     		movs	r3, #0
 1461 0070 0193     		str	r3, [sp, #4]
 426:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1462              		.loc 1 426 3 is_stmt 1 view .LVU351
 426:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1463              		.loc 1 426 41 is_stmt 0 view .LVU352
 1464 0072 0293     		str	r3, [sp, #8]
 427:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1465              		.loc 1 427 3 is_stmt 1 view .LVU353
 427:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1466              		.loc 1 427 34 is_stmt 0 view .LVU354
 1467 0074 0393     		str	r3, [sp, #12]
 428:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1468              		.loc 1 428 3 is_stmt 1 view .LVU355
 428:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1469              		.loc 1 428 33 is_stmt 0 view .LVU356
 1470 0076 0493     		str	r3, [sp, #16]
 429:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1471              		.loc 1 429 3 is_stmt 1 view .LVU357
 429:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1472              		.loc 1 429 35 is_stmt 0 view .LVU358
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 59


 1473 0078 0593     		str	r3, [sp, #20]
 430:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1474              		.loc 1 430 3 is_stmt 1 view .LVU359
 430:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1475              		.loc 1 430 38 is_stmt 0 view .LVU360
 1476 007a 4FF40052 		mov	r2, #8192
 1477 007e 0692     		str	r2, [sp, #24]
 431:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1478              		.loc 1 431 3 is_stmt 1 view .LVU361
 431:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1479              		.loc 1 431 40 is_stmt 0 view .LVU362
 1480 0080 0893     		str	r3, [sp, #32]
 432:Core/Src/main.c ****   {
 1481              		.loc 1 432 3 is_stmt 1 view .LVU363
 432:Core/Src/main.c ****   {
 1482              		.loc 1 432 7 is_stmt 0 view .LVU364
 1483 0082 01A9     		add	r1, sp, #4
 1484 0084 0848     		ldr	r0, .L99
 1485 0086 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1486              	.LVL77:
 432:Core/Src/main.c ****   {
 1487              		.loc 1 432 6 view .LVU365
 1488 008a 50B9     		cbnz	r0, .L98
 439:Core/Src/main.c **** 
 1489              		.loc 1 439 3 is_stmt 1 view .LVU366
 1490 008c 0648     		ldr	r0, .L99
 1491 008e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1492              	.LVL78:
 441:Core/Src/main.c **** 
 1493              		.loc 1 441 1 is_stmt 0 view .LVU367
 1494 0092 12B0     		add	sp, sp, #72
 1495              	.LCFI36:
 1496              		.cfi_remember_state
 1497              		.cfi_def_cfa_offset 8
 1498              		@ sp needed
 1499 0094 10BD     		pop	{r4, pc}
 1500              	.L95:
 1501              	.LCFI37:
 1502              		.cfi_restore_state
 406:Core/Src/main.c ****   }
 1503              		.loc 1 406 5 is_stmt 1 view .LVU368
 1504 0096 FFF7FEFF 		bl	Error_Handler
 1505              	.LVL79:
 1506              	.L96:
 412:Core/Src/main.c ****   }
 1507              		.loc 1 412 5 view .LVU369
 1508 009a FFF7FEFF 		bl	Error_Handler
 1509              	.LVL80:
 1510              	.L97:
 423:Core/Src/main.c ****   }
 1511              		.loc 1 423 5 view .LVU370
 1512 009e FFF7FEFF 		bl	Error_Handler
 1513              	.LVL81:
 1514              	.L98:
 434:Core/Src/main.c ****   }
 1515              		.loc 1 434 5 view .LVU371
 1516 00a2 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 60


 1517              	.LVL82:
 1518              	.L100:
 1519 00a6 00BF     		.align	2
 1520              	.L99:
 1521 00a8 00000000 		.word	.LANCHOR10
 1522 00ac 00000140 		.word	1073807360
 1523              		.cfi_endproc
 1524              	.LFE151:
 1526              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1527              		.align	1
 1528              		.syntax unified
 1529              		.thumb
 1530              		.thumb_func
 1532              	MX_TIM2_Init:
 1533              	.LFB152:
 449:Core/Src/main.c **** 
 1534              		.loc 1 449 1 view -0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 24
 1537              		@ frame_needed = 0, uses_anonymous_args = 0
 1538 0000 00B5     		push	{lr}
 1539              	.LCFI38:
 1540              		.cfi_def_cfa_offset 4
 1541              		.cfi_offset 14, -4
 1542 0002 87B0     		sub	sp, sp, #28
 1543              	.LCFI39:
 1544              		.cfi_def_cfa_offset 32
 455:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1545              		.loc 1 455 3 view .LVU373
 455:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1546              		.loc 1 455 26 is_stmt 0 view .LVU374
 1547 0004 0023     		movs	r3, #0
 1548 0006 0293     		str	r3, [sp, #8]
 1549 0008 0393     		str	r3, [sp, #12]
 1550 000a 0493     		str	r3, [sp, #16]
 1551 000c 0593     		str	r3, [sp, #20]
 456:Core/Src/main.c **** 
 1552              		.loc 1 456 3 is_stmt 1 view .LVU375
 456:Core/Src/main.c **** 
 1553              		.loc 1 456 27 is_stmt 0 view .LVU376
 1554 000e 0093     		str	r3, [sp]
 1555 0010 0193     		str	r3, [sp, #4]
 461:Core/Src/main.c ****   htim2.Init.Prescaler = 639;
 1556              		.loc 1 461 3 is_stmt 1 view .LVU377
 461:Core/Src/main.c ****   htim2.Init.Prescaler = 639;
 1557              		.loc 1 461 18 is_stmt 0 view .LVU378
 1558 0012 1448     		ldr	r0, .L109
 1559 0014 4FF08042 		mov	r2, #1073741824
 1560 0018 0260     		str	r2, [r0]
 462:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1561              		.loc 1 462 3 is_stmt 1 view .LVU379
 462:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1562              		.loc 1 462 24 is_stmt 0 view .LVU380
 1563 001a 40F27F22 		movw	r2, #639
 1564 001e 4260     		str	r2, [r0, #4]
 463:Core/Src/main.c ****   htim2.Init.Period = 999;
 1565              		.loc 1 463 3 is_stmt 1 view .LVU381
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 61


 463:Core/Src/main.c ****   htim2.Init.Period = 999;
 1566              		.loc 1 463 26 is_stmt 0 view .LVU382
 1567 0020 8360     		str	r3, [r0, #8]
 464:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1568              		.loc 1 464 3 is_stmt 1 view .LVU383
 464:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1569              		.loc 1 464 21 is_stmt 0 view .LVU384
 1570 0022 40F2E732 		movw	r2, #999
 1571 0026 C260     		str	r2, [r0, #12]
 465:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1572              		.loc 1 465 3 is_stmt 1 view .LVU385
 465:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1573              		.loc 1 465 28 is_stmt 0 view .LVU386
 1574 0028 0361     		str	r3, [r0, #16]
 466:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1575              		.loc 1 466 3 is_stmt 1 view .LVU387
 466:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1576              		.loc 1 466 32 is_stmt 0 view .LVU388
 1577 002a 8361     		str	r3, [r0, #24]
 467:Core/Src/main.c ****   {
 1578              		.loc 1 467 3 is_stmt 1 view .LVU389
 467:Core/Src/main.c ****   {
 1579              		.loc 1 467 7 is_stmt 0 view .LVU390
 1580 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1581              	.LVL83:
 467:Core/Src/main.c ****   {
 1582              		.loc 1 467 6 view .LVU391
 1583 0030 90B9     		cbnz	r0, .L106
 471:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1584              		.loc 1 471 3 is_stmt 1 view .LVU392
 471:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1585              		.loc 1 471 34 is_stmt 0 view .LVU393
 1586 0032 4FF48053 		mov	r3, #4096
 1587 0036 0293     		str	r3, [sp, #8]
 472:Core/Src/main.c ****   {
 1588              		.loc 1 472 3 is_stmt 1 view .LVU394
 472:Core/Src/main.c ****   {
 1589              		.loc 1 472 7 is_stmt 0 view .LVU395
 1590 0038 02A9     		add	r1, sp, #8
 1591 003a 0A48     		ldr	r0, .L109
 1592 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1593              	.LVL84:
 472:Core/Src/main.c ****   {
 1594              		.loc 1 472 6 view .LVU396
 1595 0040 60B9     		cbnz	r0, .L107
 476:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1596              		.loc 1 476 3 is_stmt 1 view .LVU397
 476:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1597              		.loc 1 476 37 is_stmt 0 view .LVU398
 1598 0042 0023     		movs	r3, #0
 1599 0044 0093     		str	r3, [sp]
 477:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1600              		.loc 1 477 3 is_stmt 1 view .LVU399
 477:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1601              		.loc 1 477 33 is_stmt 0 view .LVU400
 1602 0046 0193     		str	r3, [sp, #4]
 478:Core/Src/main.c ****   {
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 62


 1603              		.loc 1 478 3 is_stmt 1 view .LVU401
 478:Core/Src/main.c ****   {
 1604              		.loc 1 478 7 is_stmt 0 view .LVU402
 1605 0048 6946     		mov	r1, sp
 1606 004a 0648     		ldr	r0, .L109
 1607 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1608              	.LVL85:
 478:Core/Src/main.c ****   {
 1609              		.loc 1 478 6 view .LVU403
 1610 0050 30B9     		cbnz	r0, .L108
 486:Core/Src/main.c **** 
 1611              		.loc 1 486 1 view .LVU404
 1612 0052 07B0     		add	sp, sp, #28
 1613              	.LCFI40:
 1614              		.cfi_remember_state
 1615              		.cfi_def_cfa_offset 4
 1616              		@ sp needed
 1617 0054 5DF804FB 		ldr	pc, [sp], #4
 1618              	.L106:
 1619              	.LCFI41:
 1620              		.cfi_restore_state
 469:Core/Src/main.c ****   }
 1621              		.loc 1 469 5 is_stmt 1 view .LVU405
 1622 0058 FFF7FEFF 		bl	Error_Handler
 1623              	.LVL86:
 1624              	.L107:
 474:Core/Src/main.c ****   }
 1625              		.loc 1 474 5 view .LVU406
 1626 005c FFF7FEFF 		bl	Error_Handler
 1627              	.LVL87:
 1628              	.L108:
 480:Core/Src/main.c ****   }
 1629              		.loc 1 480 5 view .LVU407
 1630 0060 FFF7FEFF 		bl	Error_Handler
 1631              	.LVL88:
 1632              	.L110:
 1633              		.align	2
 1634              	.L109:
 1635 0064 00000000 		.word	.LANCHOR16
 1636              		.cfi_endproc
 1637              	.LFE152:
 1639              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 1640              		.align	1
 1641              		.syntax unified
 1642              		.thumb
 1643              		.thumb_func
 1645              	MX_USART6_UART_Init:
 1646              	.LFB153:
 494:Core/Src/main.c **** 
 1647              		.loc 1 494 1 view -0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 1651 0000 08B5     		push	{r3, lr}
 1652              	.LCFI42:
 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 3, -8
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 63


 1655              		.cfi_offset 14, -4
 503:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1656              		.loc 1 503 3 view .LVU409
 503:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1657              		.loc 1 503 19 is_stmt 0 view .LVU410
 1658 0002 0A48     		ldr	r0, .L115
 1659 0004 0A4B     		ldr	r3, .L115+4
 1660 0006 0360     		str	r3, [r0]
 504:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1661              		.loc 1 504 3 is_stmt 1 view .LVU411
 504:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1662              		.loc 1 504 24 is_stmt 0 view .LVU412
 1663 0008 4FF4E133 		mov	r3, #115200
 1664 000c 4360     		str	r3, [r0, #4]
 505:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1665              		.loc 1 505 3 is_stmt 1 view .LVU413
 505:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1666              		.loc 1 505 26 is_stmt 0 view .LVU414
 1667 000e 0023     		movs	r3, #0
 1668 0010 8360     		str	r3, [r0, #8]
 506:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1669              		.loc 1 506 3 is_stmt 1 view .LVU415
 506:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1670              		.loc 1 506 24 is_stmt 0 view .LVU416
 1671 0012 C360     		str	r3, [r0, #12]
 507:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1672              		.loc 1 507 3 is_stmt 1 view .LVU417
 507:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1673              		.loc 1 507 22 is_stmt 0 view .LVU418
 1674 0014 0361     		str	r3, [r0, #16]
 508:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1675              		.loc 1 508 3 is_stmt 1 view .LVU419
 508:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1676              		.loc 1 508 20 is_stmt 0 view .LVU420
 1677 0016 0C22     		movs	r2, #12
 1678 0018 4261     		str	r2, [r0, #20]
 509:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1679              		.loc 1 509 3 is_stmt 1 view .LVU421
 509:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1680              		.loc 1 509 25 is_stmt 0 view .LVU422
 1681 001a 8361     		str	r3, [r0, #24]
 510:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1682              		.loc 1 510 3 is_stmt 1 view .LVU423
 510:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1683              		.loc 1 510 28 is_stmt 0 view .LVU424
 1684 001c C361     		str	r3, [r0, #28]
 511:Core/Src/main.c ****   {
 1685              		.loc 1 511 3 is_stmt 1 view .LVU425
 511:Core/Src/main.c ****   {
 1686              		.loc 1 511 7 is_stmt 0 view .LVU426
 1687 001e FFF7FEFF 		bl	HAL_UART_Init
 1688              	.LVL89:
 511:Core/Src/main.c ****   {
 1689              		.loc 1 511 6 view .LVU427
 1690 0022 00B9     		cbnz	r0, .L114
 519:Core/Src/main.c **** 
 1691              		.loc 1 519 1 view .LVU428
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 64


 1692 0024 08BD     		pop	{r3, pc}
 1693              	.L114:
 513:Core/Src/main.c ****   }
 1694              		.loc 1 513 5 is_stmt 1 view .LVU429
 1695 0026 FFF7FEFF 		bl	Error_Handler
 1696              	.LVL90:
 1697              	.L116:
 1698 002a 00BF     		.align	2
 1699              	.L115:
 1700 002c 00000000 		.word	.LANCHOR11
 1701 0030 00140140 		.word	1073812480
 1702              		.cfi_endproc
 1703              	.LFE153:
 1705              		.section	.text.SystemClock_Config,"ax",%progbits
 1706              		.align	1
 1707              		.global	SystemClock_Config
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1712              	SystemClock_Config:
 1713              	.LFB149:
 300:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1714              		.loc 1 300 1 view -0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 80
 1717              		@ frame_needed = 0, uses_anonymous_args = 0
 1718 0000 00B5     		push	{lr}
 1719              	.LCFI43:
 1720              		.cfi_def_cfa_offset 4
 1721              		.cfi_offset 14, -4
 1722 0002 95B0     		sub	sp, sp, #84
 1723              	.LCFI44:
 1724              		.cfi_def_cfa_offset 88
 301:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1725              		.loc 1 301 3 view .LVU431
 301:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1726              		.loc 1 301 22 is_stmt 0 view .LVU432
 1727 0004 3022     		movs	r2, #48
 1728 0006 0021     		movs	r1, #0
 1729 0008 08A8     		add	r0, sp, #32
 1730 000a FFF7FEFF 		bl	memset
 1731              	.LVL91:
 302:Core/Src/main.c **** 
 1732              		.loc 1 302 3 is_stmt 1 view .LVU433
 302:Core/Src/main.c **** 
 1733              		.loc 1 302 22 is_stmt 0 view .LVU434
 1734 000e 0023     		movs	r3, #0
 1735 0010 0393     		str	r3, [sp, #12]
 1736 0012 0493     		str	r3, [sp, #16]
 1737 0014 0593     		str	r3, [sp, #20]
 1738 0016 0693     		str	r3, [sp, #24]
 1739 0018 0793     		str	r3, [sp, #28]
 306:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1740              		.loc 1 306 3 is_stmt 1 view .LVU435
 1741              	.LBB11:
 306:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1742              		.loc 1 306 3 view .LVU436
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 65


 1743 001a 0193     		str	r3, [sp, #4]
 306:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1744              		.loc 1 306 3 view .LVU437
 1745 001c 1E4A     		ldr	r2, .L123
 1746 001e 116C     		ldr	r1, [r2, #64]
 1747 0020 41F08051 		orr	r1, r1, #268435456
 1748 0024 1164     		str	r1, [r2, #64]
 306:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1749              		.loc 1 306 3 view .LVU438
 1750 0026 126C     		ldr	r2, [r2, #64]
 1751 0028 02F08052 		and	r2, r2, #268435456
 1752 002c 0192     		str	r2, [sp, #4]
 306:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1753              		.loc 1 306 3 view .LVU439
 1754 002e 019A     		ldr	r2, [sp, #4]
 1755              	.LBE11:
 306:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1756              		.loc 1 306 3 view .LVU440
 307:Core/Src/main.c **** 
 1757              		.loc 1 307 3 view .LVU441
 1758              	.LBB12:
 307:Core/Src/main.c **** 
 1759              		.loc 1 307 3 view .LVU442
 1760 0030 0293     		str	r3, [sp, #8]
 307:Core/Src/main.c **** 
 1761              		.loc 1 307 3 view .LVU443
 1762 0032 1A4A     		ldr	r2, .L123+4
 1763 0034 1168     		ldr	r1, [r2]
 1764 0036 41F48041 		orr	r1, r1, #16384
 1765 003a 1160     		str	r1, [r2]
 307:Core/Src/main.c **** 
 1766              		.loc 1 307 3 view .LVU444
 1767 003c 1268     		ldr	r2, [r2]
 1768 003e 02F48042 		and	r2, r2, #16384
 1769 0042 0292     		str	r2, [sp, #8]
 307:Core/Src/main.c **** 
 1770              		.loc 1 307 3 view .LVU445
 1771 0044 029A     		ldr	r2, [sp, #8]
 1772              	.LBE12:
 307:Core/Src/main.c **** 
 1773              		.loc 1 307 3 view .LVU446
 312:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1774              		.loc 1 312 3 view .LVU447
 312:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1775              		.loc 1 312 36 is_stmt 0 view .LVU448
 1776 0046 0222     		movs	r2, #2
 1777 0048 0892     		str	r2, [sp, #32]
 313:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1778              		.loc 1 313 3 is_stmt 1 view .LVU449
 313:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1779              		.loc 1 313 30 is_stmt 0 view .LVU450
 1780 004a 0121     		movs	r1, #1
 1781 004c 0B91     		str	r1, [sp, #44]
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1782              		.loc 1 314 3 is_stmt 1 view .LVU451
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1783              		.loc 1 314 41 is_stmt 0 view .LVU452
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 66


 1784 004e 1021     		movs	r1, #16
 1785 0050 0C91     		str	r1, [sp, #48]
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1786              		.loc 1 315 3 is_stmt 1 view .LVU453
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1787              		.loc 1 315 34 is_stmt 0 view .LVU454
 1788 0052 0E92     		str	r2, [sp, #56]
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1789              		.loc 1 316 3 is_stmt 1 view .LVU455
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1790              		.loc 1 316 35 is_stmt 0 view .LVU456
 1791 0054 0F93     		str	r3, [sp, #60]
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 1792              		.loc 1 317 3 is_stmt 1 view .LVU457
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 1793              		.loc 1 317 30 is_stmt 0 view .LVU458
 1794 0056 0823     		movs	r3, #8
 1795 0058 1093     		str	r3, [sp, #64]
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1796              		.loc 1 318 3 is_stmt 1 view .LVU459
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1797              		.loc 1 318 30 is_stmt 0 view .LVU460
 1798 005a 4023     		movs	r3, #64
 1799 005c 1193     		str	r3, [sp, #68]
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1800              		.loc 1 319 3 is_stmt 1 view .LVU461
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1801              		.loc 1 319 30 is_stmt 0 view .LVU462
 1802 005e 1292     		str	r2, [sp, #72]
 320:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1803              		.loc 1 320 3 is_stmt 1 view .LVU463
 320:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1804              		.loc 1 320 30 is_stmt 0 view .LVU464
 1805 0060 0423     		movs	r3, #4
 1806 0062 1393     		str	r3, [sp, #76]
 321:Core/Src/main.c ****   {
 1807              		.loc 1 321 3 is_stmt 1 view .LVU465
 321:Core/Src/main.c ****   {
 1808              		.loc 1 321 7 is_stmt 0 view .LVU466
 1809 0064 08A8     		add	r0, sp, #32
 1810 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1811              	.LVL92:
 321:Core/Src/main.c ****   {
 1812              		.loc 1 321 6 view .LVU467
 1813 006a 80B9     		cbnz	r0, .L121
 328:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1814              		.loc 1 328 3 is_stmt 1 view .LVU468
 328:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1815              		.loc 1 328 31 is_stmt 0 view .LVU469
 1816 006c 0F23     		movs	r3, #15
 1817 006e 0393     		str	r3, [sp, #12]
 330:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1818              		.loc 1 330 3 is_stmt 1 view .LVU470
 330:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1819              		.loc 1 330 34 is_stmt 0 view .LVU471
 1820 0070 0221     		movs	r1, #2
 1821 0072 0491     		str	r1, [sp, #16]
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 67


 331:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1822              		.loc 1 331 3 is_stmt 1 view .LVU472
 331:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1823              		.loc 1 331 35 is_stmt 0 view .LVU473
 1824 0074 0023     		movs	r3, #0
 1825 0076 0593     		str	r3, [sp, #20]
 332:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1826              		.loc 1 332 3 is_stmt 1 view .LVU474
 332:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1827              		.loc 1 332 36 is_stmt 0 view .LVU475
 1828 0078 4FF48052 		mov	r2, #4096
 1829 007c 0692     		str	r2, [sp, #24]
 333:Core/Src/main.c **** 
 1830              		.loc 1 333 3 is_stmt 1 view .LVU476
 333:Core/Src/main.c **** 
 1831              		.loc 1 333 36 is_stmt 0 view .LVU477
 1832 007e 0793     		str	r3, [sp, #28]
 335:Core/Src/main.c ****   {
 1833              		.loc 1 335 3 is_stmt 1 view .LVU478
 335:Core/Src/main.c ****   {
 1834              		.loc 1 335 7 is_stmt 0 view .LVU479
 1835 0080 03A8     		add	r0, sp, #12
 1836 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1837              	.LVL93:
 335:Core/Src/main.c ****   {
 1838              		.loc 1 335 6 view .LVU480
 1839 0086 20B9     		cbnz	r0, .L122
 339:Core/Src/main.c **** 
 1840              		.loc 1 339 1 view .LVU481
 1841 0088 15B0     		add	sp, sp, #84
 1842              	.LCFI45:
 1843              		.cfi_remember_state
 1844              		.cfi_def_cfa_offset 4
 1845              		@ sp needed
 1846 008a 5DF804FB 		ldr	pc, [sp], #4
 1847              	.L121:
 1848              	.LCFI46:
 1849              		.cfi_restore_state
 323:Core/Src/main.c ****   }
 1850              		.loc 1 323 5 is_stmt 1 view .LVU482
 1851 008e FFF7FEFF 		bl	Error_Handler
 1852              	.LVL94:
 1853              	.L122:
 337:Core/Src/main.c ****   }
 1854              		.loc 1 337 5 view .LVU483
 1855 0092 FFF7FEFF 		bl	Error_Handler
 1856              	.LVL95:
 1857              	.L124:
 1858 0096 00BF     		.align	2
 1859              	.L123:
 1860 0098 00380240 		.word	1073887232
 1861 009c 00700040 		.word	1073770496
 1862              		.cfi_endproc
 1863              	.LFE149:
 1865              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1866              		.align	2
 1867              	.LC6:
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 68


 1868 0000 43414E20 		.ascii	"CAN Start Failed\015\012\000"
 1868      53746172 
 1868      74204661 
 1868      696C6564 
 1868      0D0A00
 1869              		.section	.text.main,"ax",%progbits
 1870              		.align	1
 1871              		.global	main
 1872              		.syntax unified
 1873              		.thumb
 1874              		.thumb_func
 1876              	main:
 1877              	.LFB148:
 235:Core/Src/main.c **** 
 1878              		.loc 1 235 1 view -0
 1879              		.cfi_startproc
 1880              		@ Volatile: function does not return.
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 0, uses_anonymous_args = 0
 1883 0000 08B5     		push	{r3, lr}
 1884              	.LCFI47:
 1885              		.cfi_def_cfa_offset 8
 1886              		.cfi_offset 3, -8
 1887              		.cfi_offset 14, -4
 244:Core/Src/main.c **** 
 1888              		.loc 1 244 3 view .LVU485
 1889 0002 FFF7FEFF 		bl	HAL_Init
 1890              	.LVL96:
 251:Core/Src/main.c **** 
 1891              		.loc 1 251 3 view .LVU486
 1892 0006 FFF7FEFF 		bl	SystemClock_Config
 1893              	.LVL97:
 258:Core/Src/main.c ****   MX_CAN1_Init();
 1894              		.loc 1 258 3 view .LVU487
 1895 000a FFF7FEFF 		bl	MX_GPIO_Init
 1896              	.LVL98:
 259:Core/Src/main.c ****   MX_TIM1_Init();
 1897              		.loc 1 259 3 view .LVU488
 1898 000e FFF7FEFF 		bl	MX_CAN1_Init
 1899              	.LVL99:
 260:Core/Src/main.c ****   MX_TIM2_Init();
 1900              		.loc 1 260 3 view .LVU489
 1901 0012 FFF7FEFF 		bl	MX_TIM1_Init
 1902              	.LVL100:
 261:Core/Src/main.c ****   MX_USART6_UART_Init();
 1903              		.loc 1 261 3 view .LVU490
 1904 0016 FFF7FEFF 		bl	MX_TIM2_Init
 1905              	.LVL101:
 262:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1906              		.loc 1 262 3 view .LVU491
 1907 001a FFF7FEFF 		bl	MX_USART6_UART_Init
 1908              	.LVL102:
 264:Core/Src/main.c ****     if (HAL_CAN_Start(&hcan1) != HAL_OK) {
 1909              		.loc 1 264 3 view .LVU492
 1910 001e FFF7FEFF 		bl	CAN_Filter_Config
 1911              	.LVL103:
 265:Core/Src/main.c ****         debug_print("CAN Start Failed\r\n");
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 69


 1912              		.loc 1 265 5 view .LVU493
 265:Core/Src/main.c ****         debug_print("CAN Start Failed\r\n");
 1913              		.loc 1 265 9 is_stmt 0 view .LVU494
 1914 0022 1848     		ldr	r0, .L130
 1915 0024 FFF7FEFF 		bl	HAL_CAN_Start
 1916              	.LVL104:
 265:Core/Src/main.c ****         debug_print("CAN Start Failed\r\n");
 1917              		.loc 1 265 8 view .LVU495
 1918 0028 20B1     		cbz	r0, .L126
 266:Core/Src/main.c ****         Error_Handler();
 1919              		.loc 1 266 9 is_stmt 1 view .LVU496
 1920 002a 1748     		ldr	r0, .L130+4
 1921 002c FFF7FEFF 		bl	debug_print
 1922              	.LVL105:
 267:Core/Src/main.c ****     }
 1923              		.loc 1 267 9 view .LVU497
 1924 0030 FFF7FEFF 		bl	Error_Handler
 1925              	.LVL106:
 1926              	.L126:
 269:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 1927              		.loc 1 269 5 view .LVU498
 1928 0034 40F20341 		movw	r1, #1027
 1929 0038 1248     		ldr	r0, .L130
 1930 003a FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 1931              	.LVL107:
 270:Core/Src/main.c ****      HAL_TIM_Base_Start_IT(&htim2);
 1932              		.loc 1 270 5 view .LVU499
 1933 003e 0021     		movs	r1, #0
 1934 0040 1248     		ldr	r0, .L130+8
 1935 0042 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1936              	.LVL108:
 271:Core/Src/main.c ****   set_timer(0, 10);
 1937              		.loc 1 271 6 view .LVU500
 1938 0046 1248     		ldr	r0, .L130+12
 1939 0048 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1940              	.LVL109:
 272:Core/Src/main.c ****   /* USER CODE END 2 */
 1941              		.loc 1 272 3 view .LVU501
 1942 004c 0A21     		movs	r1, #10
 1943 004e 0020     		movs	r0, #0
 1944 0050 FFF7FEFF 		bl	set_timer
 1945              	.LVL110:
 1946              	.L127:
 277:Core/Src/main.c ****   {
 1947              		.loc 1 277 3 view .LVU502
 279:Core/Src/main.c ****     {
 1948              		.loc 1 279 5 view .LVU503
 279:Core/Src/main.c ****     {
 1949              		.loc 1 279 17 is_stmt 0 view .LVU504
 1950 0054 0F4B     		ldr	r3, .L130+16
 1951 0056 1B68     		ldr	r3, [r3]
 279:Core/Src/main.c ****     {
 1952              		.loc 1 279 7 view .LVU505
 1953 0058 012B     		cmp	r3, #1
 1954 005a FBD1     		bne	.L127
 281:Core/Src/main.c **** 
 1955              		.loc 1 281 7 is_stmt 1 view .LVU506
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 70


 281:Core/Src/main.c **** 
 1956              		.loc 1 281 18 is_stmt 0 view .LVU507
 1957 005c 0E4B     		ldr	r3, .L130+20
 1958 005e 1888     		ldrh	r0, [r3]
 1959 0060 FFF7FEFF 		bl	calculate_position
 1960              	.LVL111:
 281:Core/Src/main.c **** 
 1961              		.loc 1 281 16 view .LVU508
 1962 0064 0D4B     		ldr	r3, .L130+24
 1963 0066 83ED000A 		vstr.32	s0, [r3]
 283:Core/Src/main.c ****       control_motor(output); 
 1964              		.loc 1 283 7 is_stmt 1 view .LVU509
 1965 006a FFF7FEFF 		bl	PID_control
 1966              	.LVL112:
 284:Core/Src/main.c ****       set_timer(0, 10);
 1967              		.loc 1 284 7 view .LVU510
 1968 006e 0C4B     		ldr	r3, .L130+28
 1969 0070 93ED000A 		vldr.32	s0, [r3]
 1970 0074 FFF7FEFF 		bl	control_motor
 1971              	.LVL113:
 285:Core/Src/main.c ****     }
 1972              		.loc 1 285 7 view .LVU511
 1973 0078 0A21     		movs	r1, #10
 1974 007a 0020     		movs	r0, #0
 1975 007c FFF7FEFF 		bl	set_timer
 1976              	.LVL114:
 1977 0080 E8E7     		b	.L127
 1978              	.L131:
 1979 0082 00BF     		.align	2
 1980              	.L130:
 1981 0084 00000000 		.word	.LANCHOR15
 1982 0088 00000000 		.word	.LC6
 1983 008c 00000000 		.word	.LANCHOR10
 1984 0090 00000000 		.word	.LANCHOR16
 1985 0094 00000000 		.word	timerFLag
 1986 0098 00000000 		.word	.LANCHOR13
 1987 009c 00000000 		.word	.LANCHOR1
 1988 00a0 00000000 		.word	.LANCHOR9
 1989              		.cfi_endproc
 1990              	.LFE148:
 1992              		.global	rx_header
 1993              		.global	TPS2
 1994              		.global	TPS1
 1995              		.global	sensor_error
 1996              		.global	output
 1997              		.global	Kd
 1998              		.global	Ki
 1999              		.global	Kp
 2000              		.global	previous_error
 2001              		.global	derivative
 2002              		.global	integral
 2003              		.global	error
 2004              		.global	position
 2005              		.global	setpoint
 2006              		.global	huart6
 2007              		.global	htim2
 2008              		.global	htim1
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 71


 2009              		.global	hcan1
 2010              		.section	.bss.Kd,"aw",%nobits
 2011              		.align	2
 2012              		.set	.LANCHOR8,. + 0
 2015              	Kd:
 2016 0000 00000000 		.space	4
 2017              		.section	.bss.Ki,"aw",%nobits
 2018              		.align	2
 2019              		.set	.LANCHOR7,. + 0
 2022              	Ki:
 2023 0000 00000000 		.space	4
 2024              		.section	.bss.Kp,"aw",%nobits
 2025              		.align	2
 2026              		.set	.LANCHOR6,. + 0
 2029              	Kp:
 2030 0000 00000000 		.space	4
 2031              		.section	.bss.TPS1,"aw",%nobits
 2032              		.align	1
 2033              		.set	.LANCHOR13,. + 0
 2036              	TPS1:
 2037 0000 0000     		.space	2
 2038              		.section	.bss.TPS2,"aw",%nobits
 2039              		.align	1
 2040              		.set	.LANCHOR14,. + 0
 2043              	TPS2:
 2044 0000 0000     		.space	2
 2045              		.section	.bss.derivative,"aw",%nobits
 2046              		.align	2
 2047              		.set	.LANCHOR5,. + 0
 2050              	derivative:
 2051 0000 00000000 		.space	4
 2052              		.section	.bss.error,"aw",%nobits
 2053              		.align	2
 2054              		.set	.LANCHOR2,. + 0
 2057              	error:
 2058 0000 00000000 		.space	4
 2059              		.section	.bss.hcan1,"aw",%nobits
 2060              		.align	2
 2061              		.set	.LANCHOR15,. + 0
 2064              	hcan1:
 2065 0000 00000000 		.space	40
 2065      00000000 
 2065      00000000 
 2065      00000000 
 2065      00000000 
 2066              		.section	.bss.htim1,"aw",%nobits
 2067              		.align	2
 2068              		.set	.LANCHOR10,. + 0
 2071              	htim1:
 2072 0000 00000000 		.space	72
 2072      00000000 
 2072      00000000 
 2072      00000000 
 2072      00000000 
 2073              		.section	.bss.htim2,"aw",%nobits
 2074              		.align	2
 2075              		.set	.LANCHOR16,. + 0
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 72


 2078              	htim2:
 2079 0000 00000000 		.space	72
 2079      00000000 
 2079      00000000 
 2079      00000000 
 2079      00000000 
 2080              		.section	.bss.huart6,"aw",%nobits
 2081              		.align	2
 2082              		.set	.LANCHOR11,. + 0
 2085              	huart6:
 2086 0000 00000000 		.space	72
 2086      00000000 
 2086      00000000 
 2086      00000000 
 2086      00000000 
 2087              		.section	.bss.integral,"aw",%nobits
 2088              		.align	2
 2089              		.set	.LANCHOR3,. + 0
 2092              	integral:
 2093 0000 00000000 		.space	4
 2094              		.section	.bss.output,"aw",%nobits
 2095              		.align	2
 2096              		.set	.LANCHOR9,. + 0
 2099              	output:
 2100 0000 00000000 		.space	4
 2101              		.section	.bss.position,"aw",%nobits
 2102              		.align	2
 2103              		.set	.LANCHOR1,. + 0
 2106              	position:
 2107 0000 00000000 		.space	4
 2108              		.section	.bss.previous_error,"aw",%nobits
 2109              		.align	2
 2110              		.set	.LANCHOR4,. + 0
 2113              	previous_error:
 2114 0000 00000000 		.space	4
 2115              		.section	.bss.rx_header,"aw",%nobits
 2116              		.align	2
 2117              		.set	.LANCHOR12,. + 0
 2120              	rx_header:
 2121 0000 00000000 		.space	28
 2121      00000000 
 2121      00000000 
 2121      00000000 
 2121      00000000 
 2122              		.section	.bss.sensor_error,"aw",%nobits
 2125              	sensor_error:
 2126 0000 00       		.space	1
 2127              		.section	.bss.setpoint,"aw",%nobits
 2128              		.align	2
 2129              		.set	.LANCHOR0,. + 0
 2132              	setpoint:
 2133 0000 00000000 		.space	4
 2134              		.text
 2135              	.Letext0:
 2136              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 2137              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 2138              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 73


 2139              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2140              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2141              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2142              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2143              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2144              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2145              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 2146              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2147              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2148              		.file 15 "Core/Inc/timer_software.h"
 2149              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2150              		.file 17 "Core/Inc/main.h"
 2151              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2152              		.file 19 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 2153              		.file 20 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 2154              		.file 21 "<built-in>"
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 74


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:165    .text.MX_GPIO_Init:000000a0 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:175    .text.adc_to_voltage:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:181    .text.adc_to_voltage:00000000 adc_to_voltage
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:221    .text.adc_to_voltage:00000030 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:230    .text.calculate_position:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:236    .text.calculate_position:00000000 calculate_position
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:308    .text.calculate_position:00000058 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:319    .text.PID_control:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:325    .text.PID_control:00000000 PID_control
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:477    .text.PID_control:00000108 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:497    .text.control_motor:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:503    .text.control_motor:00000000 control_motor
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:619    .text.control_motor:000000b0 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:625    .text.debug_print:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:631    .text.debug_print:00000000 debug_print
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:663    .text.debug_print:00000018 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:668    .rodata.HAL_CAN_TxMailbox0CompleteCallback.str1.4:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:672    .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:678    .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 HAL_CAN_TxMailbox0CompleteCallback
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:726    .text.HAL_CAN_TxMailbox0CompleteCallback:00000034 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:732    .rodata.HAL_CAN_TxMailbox1CompleteCallback.str1.4:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:736    .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:742    .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 HAL_CAN_TxMailbox1CompleteCallback
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:790    .text.HAL_CAN_TxMailbox1CompleteCallback:00000034 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:796    .rodata.HAL_CAN_TxMailbox2CompleteCallback.str1.4:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:800    .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:806    .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 HAL_CAN_TxMailbox2CompleteCallback
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:854    .text.HAL_CAN_TxMailbox2CompleteCallback:00000034 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:860    .rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:868    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:874    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1056   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000011c $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1070   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1076   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1098   .text.Error_Handler:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1104   .text.Error_Handler:00000000 Error_Handler
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1136   .rodata.CAN_Filter_Config.str1.4:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1140   .text.CAN_Filter_Config:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1146   .text.CAN_Filter_Config:00000000 CAN_Filter_Config
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1255   .text.CAN_Filter_Config:00000058 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1261   .text.MX_CAN1_Init:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1266   .text.MX_CAN1_Init:00000000 MX_CAN1_Init
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1334   .text.MX_CAN1_Init:00000034 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1340   .text.MX_TIM1_Init:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1345   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1521   .text.MX_TIM1_Init:000000a8 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1527   .text.MX_TIM2_Init:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1532   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1635   .text.MX_TIM2_Init:00000064 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1640   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1645   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1700   .text.MX_USART6_UART_Init:0000002c $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1706   .text.SystemClock_Config:00000000 $t
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 75


C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1712   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1860   .text.SystemClock_Config:00000098 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1866   .rodata.main.str1.4:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1870   .text.main:00000000 $t
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1876   .text.main:00000000 main
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:1981   .text.main:00000084 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2120   .bss.rx_header:00000000 rx_header
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2043   .bss.TPS2:00000000 TPS2
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2036   .bss.TPS1:00000000 TPS1
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2125   .bss.sensor_error:00000000 sensor_error
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2099   .bss.output:00000000 output
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2015   .bss.Kd:00000000 Kd
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2022   .bss.Ki:00000000 Ki
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2029   .bss.Kp:00000000 Kp
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2113   .bss.previous_error:00000000 previous_error
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2050   .bss.derivative:00000000 derivative
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2092   .bss.integral:00000000 integral
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2057   .bss.error:00000000 error
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2106   .bss.position:00000000 position
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2132   .bss.setpoint:00000000 setpoint
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2085   .bss.huart6:00000000 huart6
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2078   .bss.htim2:00000000 htim2
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2071   .bss.htim1:00000000 htim1
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2064   .bss.hcan1:00000000 hcan1
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2011   .bss.Kd:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2018   .bss.Ki:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2025   .bss.Kp:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2032   .bss.TPS1:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2039   .bss.TPS2:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2046   .bss.derivative:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2053   .bss.error:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2060   .bss.hcan1:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2067   .bss.htim1:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2074   .bss.htim2:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2081   .bss.huart6:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2088   .bss.integral:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2095   .bss.output:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2102   .bss.position:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2109   .bss.previous_error:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2116   .bss.rx_header:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2126   .bss.sensor_error:00000000 $d
C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s:2128   .bss.setpoint:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
__aeabi_dsub
__aeabi_dadd
strlen
HAL_UART_Transmit
HAL_CAN_GetRxMessage
snprintf
timer_run
ARM GAS  C:\Users\tiend\AppData\Local\Temp\cctE9Eaq.s 			page 76


HAL_CAN_ConfigFilter
HAL_CAN_Init
memset
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
set_timer
timerFLag
